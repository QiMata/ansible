---
- name: Ensure spark group exists
  ansible.builtin.group:
    name: "{{ apache_spark_group }}"
    state: present
  become: true

- name: Ensure spark user exists
  ansible.builtin.user:
    name: "{{ apache_spark_user }}"
    group: "{{ apache_spark_group }}"
    create_home: true
    shell: /bin/bash
    state: present
  become: true

- name: Install Java
  ansible.builtin.apt:
    name: "{{ apache_spark_java_package }}"
    state: present
    update_cache: true
  become: true

- name: Create installation directory
  ansible.builtin.file:
    path: "{{ apache_spark_install_dir }}"
    state: directory
    owner: "{{ apache_spark_user }}"
    group: "{{ apache_spark_group }}"
    mode: "0755"
  become: true

- name: Download Spark archive
  ansible.builtin.get_url:
    url: "{{ apache_spark_download_url }}"
    dest: "{{ apache_spark_install_dir }}/{{ apache_spark_package_name }}.tgz"
    mode: "0644"
    force: false
  become: true

- name: Extract Spark archive
  ansible.builtin.unarchive:
    src: "{{ apache_spark_install_dir }}/{{ apache_spark_package_name }}.tgz"
    dest: "{{ apache_spark_install_dir }}"
    remote_src: true
    creates: "{{ apache_spark_install_dir }}/{{ apache_spark_package_name }}/bin/spark-submit"
  become: true

- name: Update Spark symlink
  ansible.builtin.file:
    src: "{{ apache_spark_install_dir }}/{{ apache_spark_package_name }}"
    dest: "{{ apache_spark_symlink_dir }}"
    state: link
    force: true
  become: true

- name: Ensure additional directories exist
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: "{{ apache_spark_user }}"
    group: "{{ apache_spark_group }}"
    mode: "0755"
  loop:
    - "{{ apache_spark_eventlog_dir }}"
    - "{{ apache_spark_log_dir }}"
    - "{{ apache_spark_worker_dir }}"
    - "{{ apache_spark_recovery_dir | default(omit) }}"
  when: item is not none
  become: true
