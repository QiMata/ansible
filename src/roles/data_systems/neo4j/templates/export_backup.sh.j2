#!/bin/bash
# Neo4j Export Backup Script
# Generated by Ansible

set -euo pipefail

EXPORT_DIR="{{ neo4j_export_dir }}"
TIMESTAMP=$(date +%Y%m%d_%H%M%S)
USERNAME="neo4j"
PASSWORD="{{ neo4j_initial_password }}"

# Create export directory if it doesn't exist
mkdir -p "$EXPORT_DIR"

echo "Starting Neo4j data export..."

# Export all databases
{% for database in neo4j_databases %}
{% if database.name != 'system' %}
echo "Exporting database: {{ database.name }}"
cypher-shell -u "$USERNAME" -p "$PASSWORD" -d "{{ database.name }}" \
    "CALL apoc.export.cypher.all('${EXPORT_DIR}/{{ database.name }}_export_${TIMESTAMP}.cypher', {
        format: 'cypher-shell',
        useOptimizations: {type: 'UNWIND_BATCH', unwindBatchSize: 20}
    })"

# Export as GraphML for additional format support
cypher-shell -u "$USERNAME" -p "$PASSWORD" -d "{{ database.name }}" \
    "CALL apoc.export.graphml.all('${EXPORT_DIR}/{{ database.name }}_export_${TIMESTAMP}.graphml', {})"
{% endif %}
{% endfor %}

# Compress exports
cd "$EXPORT_DIR"
tar -czf "neo4j_export_${TIMESTAMP}.tar.gz" *_export_${TIMESTAMP}.*
rm -f *_export_${TIMESTAMP}.cypher *_export_${TIMESTAMP}.graphml

# Cleanup old exports (keep last 5)
ls -t neo4j_export_*.tar.gz | tail -n +6 | xargs -r rm -f

echo "Data export completed: ${EXPORT_DIR}/neo4j_export_${TIMESTAMP}.tar.gz"
