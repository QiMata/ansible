#!/bin/bash
# Neo4j Cluster Monitor Script
# Generated by Ansible

set -euo pipefail

HOST="{{ neo4j_listen_address }}"
HTTP_PORT="{{ neo4j_http_port }}"
USERNAME="neo4j"
PASSWORD="{{ neo4j_initial_password }}"
ALERT_WEBHOOK="{{ neo4j_alerting_webhook }}"

# Function to send alert
send_alert() {
    local message="$1"
    local severity="$2"
    
    echo "[$(date)] $severity: $message"
    
    if [ -n "$ALERT_WEBHOOK" ]; then
        curl -X POST "$ALERT_WEBHOOK" \
            -H "Content-Type: application/json" \
            -d "{\"text\":\"Neo4j Cluster Alert: $message\",\"severity\":\"$severity\"}" \
            || echo "Failed to send alert to webhook"
    fi
}

# Check cluster overview
echo "Checking cluster health..."
cluster_response=$(curl -s -u "$USERNAME:$PASSWORD" \
    "http://$HOST:$HTTP_PORT/db/cluster/overview" \
    -H "Accept: application/json" || echo "ERROR")

if [ "$cluster_response" = "ERROR" ]; then
    send_alert "Cannot connect to cluster overview endpoint" "critical"
    exit 1
fi

# Parse cluster status
core_count=$(echo "$cluster_response" | jq '.core | length' 2>/dev/null || echo "0")
replica_count=$(echo "$cluster_response" | jq '.read_replica | length' 2>/dev/null || echo "0")

echo "Core servers: $core_count"
echo "Read replicas: $replica_count"

# Check if we have minimum core servers
expected_core_count="{{ neo4j_core_count }}"
if [ "$core_count" -lt "$expected_core_count" ]; then
    send_alert "Core server count ($core_count) below expected ($expected_core_count)" "warning"
fi

# Check individual core server health
echo "$cluster_response" | jq -r '.core[] | "\(.addresses.bolt) \(.health)"' | while read -r bolt_address health; do
    if [ "$health" != "AVAILABLE" ]; then
        send_alert "Core server $bolt_address is $health" "warning"
    fi
done

# Check read replica health
echo "$cluster_response" | jq -r '.read_replica[] | "\(.addresses.bolt) \(.health)"' | while read -r bolt_address health; do
    if [ "$health" != "AVAILABLE" ]; then
        send_alert "Read replica $bolt_address is $health" "warning"
    fi
done

echo "Cluster health check completed"
