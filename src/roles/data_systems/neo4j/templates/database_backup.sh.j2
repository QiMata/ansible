#!/bin/bash
# Neo4j Database Backup Script
# Generated by Ansible

set -euo pipefail

DATABASE_NAME="${1:-neo4j}"
BACKUP_DIR="{{ neo4j_backup_dir }}"
TIMESTAMP=$(date +%Y%m%d_%H%M%S)
BACKUP_NAME="${DATABASE_NAME}_backup_${TIMESTAMP}"

# Create backup directory if it doesn't exist
mkdir -p "${BACKUP_DIR}"

# Perform backup
echo "Starting backup of database: ${DATABASE_NAME}"
neo4j-admin database backup \
    --database="${DATABASE_NAME}" \
    --to-path="${BACKUP_DIR}/${BACKUP_NAME}" \
    {% if neo4j_backup_listen_address != '127.0.0.1:6362' %}--from="{{ neo4j_backup_listen_address }}"{% endif %}

if [ $? -eq 0 ]; then
    echo "Backup completed successfully: ${BACKUP_DIR}/${BACKUP_NAME}"
    
    # Compress backup
    cd "${BACKUP_DIR}"
    tar -czf "${BACKUP_NAME}.tar.gz" "${BACKUP_NAME}"
    rm -rf "${BACKUP_NAME}"
    
    # Cleanup old backups
    find "${BACKUP_DIR}" -name "${DATABASE_NAME}_backup_*.tar.gz" -mtime +{{ neo4j_backup_retention }} -delete
    
    echo "Backup and cleanup completed"
else
    echo "Backup failed for database: ${DATABASE_NAME}" >&2
    exit 1
fi
