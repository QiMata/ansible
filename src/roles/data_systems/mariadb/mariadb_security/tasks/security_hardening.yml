---
# Security Hardening Tasks

- name: Remove anonymous users
  community.mysql.mysql_user:
    login_unix_socket: /var/run/mysqld/mysqld.sock
    name: ""
    host_all: true
    state: absent
  when: mariadb_remove_anonymous_users | bool

- name: Remove test database
  community.mysql.mysql_db:
    login_unix_socket: /var/run/mysqld/mysqld.sock
    name: test
    state: absent
  when: mariadb_remove_test_database | bool

- name: Remove remote root access
  community.mysql.mysql_user:
    login_unix_socket: /var/run/mysqld/mysqld.sock
    name: root
    host: "{{ item }}"
    state: absent
  loop: "{{ mariadb_remote_root_hosts }}"
  vars:
    mariadb_remote_root_hosts: >-
      {{
        [
          ansible_fqdn | default(''),
          ansible_hostname | default(''),
          (ansible_default_ipv4.address if (ansible_default_ipv4 is defined and 'address' in ansible_default_ipv4) else ''),
          '%'
        ] | reject('equalto', '') | list
      }}
  when: mariadb_remove_remote_root | bool

- name: Create security hardening configuration
  ansible.builtin.template:
    src: security.cnf.j2
    dest: /etc/mysql/mariadb.conf.d/50-security.cnf
    owner: root
    group: root
    mode: '0644'
  notify: restart mariadb

- name: Gather MariaDB configuration file facts
  ansible.builtin.stat:
    path: "{{ item }}"
  loop:
    - /etc/mysql/my.cnf
    - /etc/mysql/mariadb.cnf
  register: mariadb_config_files

- name: Set secure file permissions on MariaDB configuration
  ansible.builtin.file:
    path: "{{ item.item }}"
    owner: root
    group: mysql
    mode: '0640'
  loop: "{{ mariadb_config_files.results }}"
  when: item.stat.exists

- name: Set secure directory permissions
  ansible.builtin.file:
    path: "{{ item }}"
    owner: mysql
    group: mysql
    mode: '0750'
    state: directory
  loop:
    - /var/lib/mysql
    - /var/log/mysql

- name: Remove root MySQL history file
  ansible.builtin.file:
    path: /root/.mysql_history
    state: absent

- name: Discover user MySQL history files
  ansible.builtin.find:
    paths: /home
    patterns: .mysql_history
    hidden: true
    file_type: file
  register: mariadb_history_files

- name: Remove history files
  ansible.builtin.file:
    path: "{{ item.path }}"
    state: absent
  loop: "{{ mariadb_history_files.files }}"
  loop_control:
    label: "{{ item.path }}"

- name: Create mysql history symlink to /dev/null
  ansible.builtin.file:
    src: /dev/null
    dest: /root/.mysql_history
    state: link
    force: true
