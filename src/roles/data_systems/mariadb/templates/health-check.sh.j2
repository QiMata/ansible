#!/bin/bash
# ============================================================================
# MariaDB Health Check Script
# Generated by Ansible - {{ ansible_date_time.iso8601 }}
# ============================================================================

# Configuration
MYSQL_USER="root"
MYSQL_PASSWORD="{{ mariadb_root_password }}"
MYSQL_HOST="localhost"
MYSQL_PORT="{{ mariadb_port }}"
LOG_FILE="/var/log/mariadb-health.log"

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Timestamp
TIMESTAMP=$(date '+%Y-%m-%d %H:%M:%S')

# Function to log messages
log_message() {
    echo "[$TIMESTAMP] $1" | tee -a "$LOG_FILE"
}

# Function to check service status
check_service() {
    if systemctl is-active --quiet mariadb; then
        echo -e "${GREEN}✓${NC} MariaDB service is running"
        log_message "INFO: MariaDB service is running"
        return 0
    else
        echo -e "${RED}✗${NC} MariaDB service is not running"
        log_message "ERROR: MariaDB service is not running"
        return 1
    fi
}

# Function to check port connectivity
check_port() {
    if nc -z "$MYSQL_HOST" "$MYSQL_PORT"; then
        echo -e "${GREEN}✓${NC} MariaDB is listening on port $MYSQL_PORT"
        log_message "INFO: MariaDB port $MYSQL_PORT is accessible"
        return 0
    else
        echo -e "${RED}✗${NC} MariaDB is not accessible on port $MYSQL_PORT"
        log_message "ERROR: MariaDB port $MYSQL_PORT is not accessible"
        return 1
    fi
}

# Function to check database connectivity
check_connection() {
    if mysql -u"$MYSQL_USER" -p"$MYSQL_PASSWORD" -h"$MYSQL_HOST" -P"$MYSQL_PORT" -e "SELECT 1;" >/dev/null 2>&1; then
        echo -e "${GREEN}✓${NC} Database connection successful"
        log_message "INFO: Database connection successful"
        return 0
    else
        echo -e "${RED}✗${NC} Database connection failed"
        log_message "ERROR: Database connection failed"
        return 1
    fi
}

# Function to check database status
check_status() {
    local uptime=$(mysql -u"$MYSQL_USER" -p"$MYSQL_PASSWORD" -h"$MYSQL_HOST" -P"$MYSQL_PORT" -e "SHOW STATUS LIKE 'Uptime';" --batch --skip-column-names 2>/dev/null | awk '{print $2}')
    local connections=$(mysql -u"$MYSQL_USER" -p"$MYSQL_PASSWORD" -h"$MYSQL_HOST" -P"$MYSQL_PORT" -e "SHOW STATUS LIKE 'Threads_connected';" --batch --skip-column-names 2>/dev/null | awk '{print $2}')
    
    if [ -n "$uptime" ] && [ -n "$connections" ]; then
        echo -e "${GREEN}✓${NC} Database status: Uptime ${uptime}s, Active connections: $connections"
        log_message "INFO: Database uptime: ${uptime}s, connections: $connections"
        return 0
    else
        echo -e "${RED}✗${NC} Failed to retrieve database status"
        log_message "ERROR: Failed to retrieve database status"
        return 1
    fi
}

# Function to perform basic query test
check_query() {
    local version=$(mysql -u"$MYSQL_USER" -p"$MYSQL_PASSWORD" -h"$MYSQL_HOST" -P"$MYSQL_PORT" -e "SELECT VERSION();" --batch --skip-column-names 2>/dev/null)
    
    if [ -n "$version" ]; then
        echo -e "${GREEN}✓${NC} Query test successful - MariaDB version: $version"
        log_message "INFO: Query test successful - Version: $version"
        return 0
    else
        echo -e "${RED}✗${NC} Query test failed"
        log_message "ERROR: Query test failed"
        return 1
    fi
}

# Main health check
main() {
    echo "============================================"
    echo "MariaDB Health Check - $TIMESTAMP"
    echo "============================================"
    
    local exit_code=0
    
    # Run all checks
    check_service || exit_code=1
    check_port || exit_code=1
    check_connection || exit_code=1
    check_status || exit_code=1
    check_query || exit_code=1
    
    echo "============================================"
    if [ $exit_code -eq 0 ]; then
        echo -e "${GREEN}✓ All health checks passed${NC}"
        log_message "SUCCESS: All health checks passed"
    else
        echo -e "${RED}✗ One or more health checks failed${NC}"
        log_message "ERROR: One or more health checks failed"
    fi
    echo "============================================"
    
    exit $exit_code
}

# Run the health check
main "$@"
