---
# MinIO User and Access Management Tasks

- name: Install MinIO client (mc)
  ansible.builtin.get_url:
    url: "https://dl.min.io/client/mc/release/linux-amd64/mc"
    dest: /usr/local/bin/mc
    mode: '0755'
    owner: root
    group: root

- name: Create mc config directory for minio user
  ansible.builtin.file:
    path: "/home/{{ minio_user }}/.mc"
    state: directory
    owner: "{{ minio_user }}"
    group: "{{ minio_group }}"
    mode: '0700'

- name: Wait for MinIO service to be ready
  ansible.builtin.wait_for:
    port: "{{ minio_server_port }}"
    host: "{{ minio_bind_address if minio_bind_address != '0.0.0.0' else 'localhost' }}"
    delay: 10
    timeout: 60

- name: Configure mc alias for local MinIO
  ansible.builtin.shell: |
    mc alias set local http{% if minio_enable_tls %}s{% endif %}://localhost:{{ minio_server_port }} {{ minio_root_user }} {{ minio_root_password }}
  become_user: "{{ minio_user }}"
  environment:
    MC_CONFIG_DIR: "/home/{{ minio_user }}/.mc"
  changed_when: false

- name: Create MinIO buckets
  ansible.builtin.shell: |
    mc mb local/{{ item.name }} || true
  become_user: "{{ minio_user }}"
  environment:
    MC_CONFIG_DIR: "/home/{{ minio_user }}/.mc"
  loop: "{{ minio_create_buckets }}"
  when: minio_create_buckets | length > 0

- name: Configure bucket versioning
  ansible.builtin.shell: |
    mc version {% if item.versioning | default(minio_enable_versioning) %}enable{% else %}suspend{% endif %} local/{{ item.name }}
  become_user: "{{ minio_user }}"
  environment:
    MC_CONFIG_DIR: "/home/{{ minio_user }}/.mc"
  loop: "{{ minio_create_buckets }}"
  when: minio_create_buckets | length > 0

- name: Create MinIO users
  ansible.builtin.shell: |
    mc admin user add local {{ item.username }} {{ item.password }}
  become_user: "{{ minio_user }}"
  environment:
    MC_CONFIG_DIR: "/home/{{ minio_user }}/.mc"
  loop: "{{ minio_create_users }}"
  when: minio_create_users | length > 0
  no_log: true

- name: Create bucket policies directory
  ansible.builtin.file:
    path: "{{ minio_base_dir }}/policies"
    state: directory
    owner: "{{ minio_user }}"
    group: "{{ minio_group }}"
    mode: '0755'

- name: Create bucket policy files
  ansible.builtin.copy:
    content: "{{ item.policy | to_nice_json }}"
    dest: "{{ minio_base_dir }}/policies/{{ item.name }}.json"
    owner: "{{ minio_user }}"
    group: "{{ minio_group }}"
    mode: '0644'
  loop: "{{ minio_bucket_policies }}"
  when: minio_bucket_policies | length > 0

- name: Apply bucket policies
  ansible.builtin.shell: |
    mc admin policy add local {{ item.name }} {{ minio_base_dir }}/policies/{{ item.name }}.json
  become_user: "{{ minio_user }}"
  environment:
    MC_CONFIG_DIR: "/home/{{ minio_user }}/.mc"
  loop: "{{ minio_bucket_policies }}"
  when: minio_bucket_policies | length > 0

- name: Create service accounts
  ansible.builtin.shell: |
    mc admin user svcacct add local {{ item.parent_user }} --access-key {{ item.access_key }} --secret-key {{ item.secret_key }}
  become_user: "{{ minio_user }}"
  environment:
    MC_CONFIG_DIR: "/home/{{ minio_user }}/.mc"
  loop: "{{ minio_service_accounts }}"
  when: minio_service_accounts | length > 0
  no_log: true

- name: Setup access key rotation script
  ansible.builtin.template:
    src: rotate_access_keys.sh.j2
    dest: "{{ minio_base_dir }}/rotate_access_keys.sh"
    owner: "{{ minio_user }}"
    group: "{{ minio_group }}"
    mode: '0755'
  when: minio_access_key_rotation_days > 0

- name: Create access key rotation cron job
  ansible.builtin.cron:
    name: "MinIO access key rotation"
    day: "{{ minio_access_key_rotation_days }}"
    hour: "2"
    minute: "0"
    job: "{{ minio_base_dir }}/rotate_access_keys.sh"
    user: "{{ minio_user }}"
  when: minio_access_key_rotation_days > 0
