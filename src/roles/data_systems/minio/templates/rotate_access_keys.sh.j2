#!/bin/bash
# MinIO Access Key Rotation Script
# Generated by Ansible - do not edit manually

set -euo pipefail

MC_CONFIG_DIR="/home/{{ minio_user }}/.mc"
LOGFILE="{{ minio_base_dir }}/logs/key_rotation.log"

# Create log directory if it doesn't exist
mkdir -p "$(dirname "$LOGFILE")"

# Function to log messages
log_message() {
    echo "$(date '+%Y-%m-%d %H:%M:%S') - $1" | tee -a "$LOGFILE"
}

# Function to generate random password
generate_password() {
    openssl rand -base64 32 | tr -d '\n'
}

# Function to rotate service account keys
rotate_service_account() {
    local account="$1"
    local new_secret
    new_secret=$(generate_password)
    
    log_message "Rotating service account: $account"
    
    # Update service account with new secret
    if mc admin user svcacct edit local "$account" --secret-key "$new_secret"; then
        log_message "Successfully rotated service account: $account"
        # Here you would typically update your application configurations
        # or send notifications about the key rotation
    else
        log_message "ERROR: Failed to rotate service account: $account"
        return 1
    fi
}

# Main rotation function
main() {
    log_message "Starting access key rotation process"
    
    # Set MC config directory
    export MC_CONFIG_DIR
    
    # Get list of service accounts that are older than rotation period
{% for sa in minio_service_accounts %}
    rotate_service_account "{{ sa.access_key }}"
{% endfor %}
    
    log_message "Access key rotation process completed"
}

# Check if mc is available
if ! command -v mc &> /dev/null; then
    log_message "ERROR: MinIO client (mc) not found"
    exit 1
fi

main "$@"
