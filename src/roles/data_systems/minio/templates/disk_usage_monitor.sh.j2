#!/bin/bash
# MinIO Disk Usage Monitor
# Generated by Ansible - do not edit manually

set -euo pipefail

LOGFILE="{{ minio_base_dir }}/logs/disk_usage.log"
THRESHOLD={{ minio_disk_usage_threshold }}

# Create log directory if it doesn't exist
mkdir -p "$(dirname "$LOGFILE")"

# Function to log messages
log_message() {
    echo "$(date '+%Y-%m-%d %H:%M:%S') - $1" | tee -a "$LOGFILE"
}

# Function to send alert
send_alert() {
    local message="$1"
    log_message "ALERT: $message"
    # Add your alerting mechanism here
    # Example: echo "$message" | mail -s "MinIO Disk Usage Alert" admin@example.com
}

# Function to check disk usage
check_disk_usage() {
    local path="$1"
    local usage_percent
    
    usage_percent=$(df "$path" | awk 'NR==2 {print substr($5, 1, length($5)-1)}')
    
    log_message "Disk usage for $path: $usage_percent%"
    
    if [[ $usage_percent -ge $THRESHOLD ]]; then
        send_alert "Disk usage for $path is at $usage_percent% (threshold: $THRESHOLD%)"
        return 1
    fi
    
    return 0
}

# Main function
main() {
    local checks_failed=0
    
    # Check main data directory
    check_disk_usage "{{ minio_data_dir }}" || ((checks_failed++))
    
{% if minio_multiple_drives | length > 0 %}
    # Check additional drives
{% for drive in minio_multiple_drives %}
    check_disk_usage "{{ drive }}" || ((checks_failed++))
{% endfor %}
{% endif %}
    
    if [[ $checks_failed -eq 0 ]]; then
        log_message "All disk usage checks passed"
        exit 0
    else
        log_message "$checks_failed disk usage checks failed"
        exit 1
    fi
}

main "$@"
