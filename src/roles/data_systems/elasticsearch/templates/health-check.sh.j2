#!/bin/bash
# Elasticsearch Health Check Script
# Generated by Ansible

ES_HOST="{{ elasticsearch_network_host }}:{{ elasticsearch_proxy_settings.http_port | default(9200) }}"
LOG_FILE="/var/log/elasticsearch/health-check.log"
ALERT_THRESHOLD=85

timestamp() {
    date '+%Y-%m-%d %H:%M:%S'
}

log() {
    echo "$(timestamp) - $1" | tee -a "$LOG_FILE"
}

# Check if Elasticsearch is responding
if ! curl -s "http://${ES_HOST}/_cluster/health" > /dev/null; then
    log "ERROR: Elasticsearch is not responding"
    exit 1
fi

# Get cluster health
HEALTH=$(curl -s "http://${ES_HOST}/_cluster/health")
STATUS=$(echo "$HEALTH" | jq -r '.status')
NODES=$(echo "$HEALTH" | jq -r '.number_of_nodes')
UNASSIGNED=$(echo "$HEALTH" | jq -r '.unassigned_shards')

log "Cluster Status: $STATUS, Nodes: $NODES, Unassigned Shards: $UNASSIGNED"

# Check for red status
if [ "$STATUS" = "red" ]; then
    log "CRITICAL: Cluster status is RED"
    exit 2
fi

# Check disk usage
DISK_USAGE=$(curl -s "http://${ES_HOST}/_nodes/stats/fs" | \
    jq -r '.nodes[] | .fs.total.available_in_bytes / .fs.total.total_in_bytes * 100' | \
    awk '{printf "%.0f", 100-$1}')

if [ "$DISK_USAGE" -gt "$ALERT_THRESHOLD" ]; then
    log "WARNING: High disk usage detected: ${DISK_USAGE}%"
fi

# Check JVM heap usage
HEAP_USAGE=$(curl -s "http://${ES_HOST}/_nodes/stats/jvm" | \
    jq -r '.nodes[] | .jvm.mem.heap_used_percent' | \
    sort -nr | head -1)

if [ "$HEAP_USAGE" -gt "$ALERT_THRESHOLD" ]; then
    log "WARNING: High JVM heap usage detected: ${HEAP_USAGE}%"
fi

log "Health check completed successfully"
