---
# ============================================================================
# PLUGIN MANAGEMENT TASKS
# ============================================================================

- name: Remove unwanted Elasticsearch plugins
  ansible.builtin.shell: |
    /usr/share/elasticsearch/bin/elasticsearch-plugin remove {{ item }}
  loop: "{{ elasticsearch_plugins_remove }}"
  register: plugin_remove_result
  failed_when:
    - plugin_remove_result.rc != 0
    - "'not found' not in plugin_remove_result.stderr"
  changed_when: plugin_remove_result.rc == 0
  notify: restart elasticsearch

- name: Check installed Elasticsearch plugins
  ansible.builtin.shell: |
    /usr/share/elasticsearch/bin/elasticsearch-plugin list
  register: installed_plugins
  changed_when: false

- name: Install Elasticsearch plugins
  ansible.builtin.shell: |
    /usr/share/elasticsearch/bin/elasticsearch-plugin install --batch {{ item.name }}{% if item.version is defined %}:{{ item.version }}{% endif %}
  loop: "{{ elasticsearch_plugins }}"
  when: item.name not in installed_plugins.stdout
  register: plugin_install_result
  failed_when: plugin_install_result.rc != 0
  changed_when: plugin_install_result.rc == 0
  notify: restart elasticsearch

- name: Verify plugin installation
  ansible.builtin.shell: |
    /usr/share/elasticsearch/bin/elasticsearch-plugin list
  register: verify_plugins
  changed_when: false

- name: Display installed plugins
  ansible.builtin.debug:
    msg: "Installed plugins: {{ verify_plugins.stdout_lines }}"

- name: Configure plugin-specific settings
  ansible.builtin.template:
    src: plugin-config.yml.j2
    dest: "/etc/elasticsearch/plugin-config.yml"
    owner: root
    group: elasticsearch
    mode: '0640'
  when: elasticsearch_plugins | length > 0
  notify: restart elasticsearch

- name: Set plugin directory permissions
  ansible.builtin.file:
    path: /usr/share/elasticsearch/plugins
    owner: root
    group: elasticsearch
    mode: '0755'
    recurse: true
  when: elasticsearch_plugins | length > 0

- name: Configure repository-s3 plugin settings
  ansible.builtin.uri:
    url: "http://{{ elasticsearch_network_host }}:{{ elasticsearch_proxy_settings.http_port | default(9200) }}/_cluster/settings"
    method: PUT
    body_format: json
    body:
      persistent:
        repositories:
          s3:
            access_key: "{{ s3_access_key | default('') }}"
            secret_key: "{{ s3_secret_key | default('') }}"
            bucket: "{{ s3_bucket | default('') }}"
            region: "{{ s3_region | default('us-east-1') }}"
    headers:
      Content-Type: "application/json"
    status_code: [200, 400]
  when:
    - "'repository-s3' in (elasticsearch_plugins | map(attribute='name') | list)"
    - s3_access_key is defined
    - s3_secret_key is defined
    - elasticsearch_wait_for_cluster
  register: elasticsearch_repository_s3_result
  failed_when: elasticsearch_repository_s3_result.status not in [200, 400]
  changed_when: elasticsearch_repository_s3_result.status == 200
  delegate_to: "{{ groups['es_cluster'][0] | default(inventory_hostname) }}"
  run_once: true

- name: Configure analysis-icu plugin settings
  ansible.builtin.uri:
    url: "http://{{ elasticsearch_network_host }}:{{ elasticsearch_proxy_settings.http_port | default(9200) }}/_cluster/settings"
    method: PUT
    body_format: json
    body:
      persistent:
        cluster:
          routing:
            allocation:
              awareness:
                attributes: "zone"
    headers:
      Content-Type: "application/json"
    status_code: [200, 400]
  when:
    - "'analysis-icu' in (elasticsearch_plugins | map(attribute='name') | list)"
    - elasticsearch_wait_for_cluster
  register: elasticsearch_analysis_icu_result
  failed_when: elasticsearch_analysis_icu_result.status not in [200, 400]
  changed_when: elasticsearch_analysis_icu_result.status == 200
  delegate_to: "{{ groups['es_cluster'][0] | default(inventory_hostname) }}"
  run_once: true
