---
dependency:
  name: galaxy
  enabled: false
  options:
    requirements-file: ../../../../../molecule/proxmox/requirements.yml
    force: false
driver:
  # Use the same pattern as the central proxmox scenario (delegated/default driver with custom playbooks)
  name: default
  options:
    managed: false
    ansible_connection_options:
      ansible_connection: ssh
platforms:
  - name: debian-test-instance
provisioner:
  name: ansible
  playbooks:
    create: /ansible/src/molecule/proxmox/create.yml
    prepare: /ansible/src/molecule/proxmox/prepare.yml
    converge: converge.yml
    verify: verify.yml
    destroy: /ansible/src/molecule/proxmox/destroy.yml
  inventory:
    host_vars:
      debian-test-instance:
        ansible_host: "{{ lookup('env', 'CONTAINER_IP') | default('10.80.0.200') }}"
        ansible_user: molecule
        ansible_connection: ssh
        ansible_ssh_pass: "molecule123"
        ansible_ssh_common_args: '-o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null'
  config_options:
    defaults:
      host_key_checking: false
      stdout_callback: yaml
      bin_ansible_callbacks: true
    ssh_connection:
      ssh_args: -o ControlMaster=auto -o ControlPersist=60s -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no
  roles_path: /ansible/src/roles/infrastructure:/ansible/src/roles
verifier:
  name: ansible
scenario:
  name: proxmox
  test_sequence:
    - dependency
    - cleanup
    - destroy
    - syntax
    - create
    - prepare
    - converge
    - idempotence
    - verify
    - cleanup
    - destroy
