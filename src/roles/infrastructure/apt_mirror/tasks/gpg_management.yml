---
# GPG Key Management Tasks
- name: Install GPG tools
  ansible.builtin.package:
    name:
      - gnupg
      - gpg-agent
      - dirmngr
    state: present

- name: Create GPG directory for apt-mirror user
  ansible.builtin.file:
    path: /var/spool/apt-mirror/.gnupg
    state: directory
    owner: apt-mirror
    group: apt-mirror
    mode: '0700'

- name: Import GPG keys from keyserver
  ansible.builtin.command:
    cmd: >
      gpg --homedir /var/spool/apt-mirror/.gnupg
      --keyserver {{ item.keyserver }}
      --recv-keys {{ item.key_id }}
  become_user: apt-mirror
  loop: "{{ apt_mirror_gpg_keys | selectattr('keyserver', 'defined') | list }}"
  register: gpg_import_keyserver
  changed_when: "'imported' in gpg_import_keyserver.stderr"
  failed_when: 
    - gpg_import_keyserver.rc != 0
    - "'already in keyring' not in gpg_import_keyserver.stderr"

- name: Download and import GPG keys from URL
  block:
    - name: Download GPG key from URL
      ansible.builtin.get_url:
        url: "{{ item.url }}"
        dest: "/tmp/{{ item.name }}.asc"
        mode: '0644'
      loop: "{{ apt_mirror_gpg_keys | selectattr('url', 'defined') | list }}"

    - name: Import GPG key from file
      ansible.builtin.command:
        cmd: >
          gpg --homedir /var/spool/apt-mirror/.gnupg
          --import /tmp/{{ item.name }}.asc
      become_user: apt-mirror
      loop: "{{ apt_mirror_gpg_keys | selectattr('url', 'defined') | list }}"
      register: gpg_import_url
      changed_when: "'imported' in gpg_import_url.stderr"
      failed_when: 
        - gpg_import_url.rc != 0
        - "'already in keyring' not in gpg_import_url.stderr"

    - name: Cleanup downloaded key files
      ansible.builtin.file:
        path: "/tmp/{{ item.name }}.asc"
        state: absent
      loop: "{{ apt_mirror_gpg_keys | selectattr('url', 'defined') | list }}"

- name: Export GPG keys to system keyring
  ansible.builtin.shell: |
    gpg --homedir /var/spool/apt-mirror/.gnupg --export {{ item.key_id | default('') }} | \
    apt-key add -
  become: true
  loop: "{{ apt_mirror_gpg_keys }}"
  when: item.key_id is defined
  register: gpg_export
  changed_when: "'OK' in gpg_export.stdout"

- name: Create GPG key verification script
  ansible.builtin.template:
    src: verify_gpg_keys.sh.j2
    dest: /usr/local/bin/verify_gpg_keys.sh
    mode: '0755'
    owner: root
    group: root

- name: Add GPG key verification to mirror sync script
  ansible.builtin.cron:
    name: "Verify GPG keys"
    cron_file: apt-mirror-gpg
    user: root
    minute: "0"
    hour: "3"
    job: "/usr/local/bin/verify_gpg_keys.sh >> /var/log/apt-mirror-gpg.log 2>&1"
