#!/bin/bash
# GPG Key Verification Script for apt-mirror
# Generated by Ansible - Do not edit manually

LOGFILE="/var/log/apt-mirror-gpg.log"
GPG_HOME="/var/spool/apt-mirror/.gnupg"
KEYS_VERIFIED=0
KEYS_FAILED=0

log_message() {
    echo "$(date '+%Y-%m-%d %H:%M:%S') - $1" >> "$LOGFILE"
}

log_message "Starting GPG key verification process"

# Verify each configured GPG key
{% for key in apt_mirror_gpg_keys %}
{% if key.key_id is defined %}
log_message "Verifying key: {{ key.name }} ({{ key.key_id }})"

# Check if key exists in keyring
if gpg --homedir "$GPG_HOME" --list-keys "{{ key.key_id }}" >/dev/null 2>&1; then
    log_message "Key {{ key.key_id }} found in keyring"
    
    # Check key validity
    if gpg --homedir "$GPG_HOME" --check-signatures "{{ key.key_id }}" >/dev/null 2>&1; then
        log_message "Key {{ key.key_id }} signatures valid"
        ((KEYS_VERIFIED++))
    else
        log_message "WARNING: Key {{ key.key_id }} has invalid signatures"
        ((KEYS_FAILED++))
    fi
else
    log_message "ERROR: Key {{ key.key_id }} not found in keyring"
    ((KEYS_FAILED++))
fi
{% endif %}
{% endfor %}

log_message "GPG verification complete. Verified: $KEYS_VERIFIED, Failed: $KEYS_FAILED"

# Exit with error if any keys failed verification
if [ $KEYS_FAILED -gt 0 ]; then
    log_message "GPG verification failed for $KEYS_FAILED keys"
    exit 1
fi

log_message "All GPG keys verified successfully"
exit 0
