# NetBox Configuration
import os

# Basic Settings
ALLOWED_HOSTS = {{ netbox_allowed_hosts | to_json }}
DEBUG = {{ operations_management_netbox_debug | lower }}

# Database Configuration
DATABASE = {
    'NAME': '{{ postgres_db }}',
    'USER': '{{ postgres_user }}',
    'PASSWORD': '{{ postgres_password }}',
    'HOST': '{{ postgres_host }}',
    'PORT': '{{ postgres_port }}',
    'CONN_MAX_AGE': 300,
    'OPTIONS': {
        'sslmode': 'prefer',
    },
}

# Redis Configuration
REDIS = {
    'tasks': {
        'HOST': '{{ redis_host }}',
        'PORT': {{ redis_port }},
        'PASSWORD': '{{ redis_password | default("") }}',
        'DATABASE': 0,
        'SSL': {{ redis_ssl | default(false) | lower }},
    },
    'caching': {
        'HOST': '{{ redis_host }}',
        'PORT': {{ redis_port }},
        'PASSWORD': '{{ redis_password | default("") }}',
        'DATABASE': 1,
        'SSL': {{ redis_ssl | default(false) | lower }},
    }
}

# Security Settings
SECRET_KEY = '{{ netbox_secret_key }}'
SESSION_COOKIE_SECURE = {{ operations_management_netbox_session_cookie_secure | lower }}
CSRF_COOKIE_SECURE = {{ operations_management_netbox_csrf_cookie_secure | lower }}
{% if operations_management_netbox_secure_ssl_redirect %}
SECURE_SSL_REDIRECT = True
{% endif %}

# File Storage
MEDIA_ROOT = '{{ operations_management_netbox_media_root }}'
STATIC_ROOT = '{{ operations_management_netbox_static_root }}'

# Time Zone and Localization
TIME_ZONE = '{{ operations_management_netbox_time_zone }}'
DATE_FORMAT = '{{ operations_management_netbox_date_format }}'
SHORT_DATE_FORMAT = '{{ operations_management_netbox_short_date_format }}'
TIME_FORMAT = '{{ operations_management_netbox_time_format }}'
SHORT_TIME_FORMAT = '{{ operations_management_netbox_short_time_format }}'
DATETIME_FORMAT = '{{ operations_management_netbox_datetime_format }}'
SHORT_DATETIME_FORMAT = '{{ operations_management_netbox_short_datetime_format }}'

# Email Configuration
{% if operations_management_netbox_email_enabled %}
EMAIL_HOST = '{{ operations_management_netbox_email_server }}'
EMAIL_PORT = {{ operations_management_netbox_email_port }}
EMAIL_HOST_USER = '{{ operations_management_netbox_email_username }}'
EMAIL_HOST_PASSWORD = '{{ operations_management_netbox_email_password }}'
EMAIL_USE_SSL = {{ operations_management_netbox_email_use_ssl | lower }}
EMAIL_USE_TLS = {{ operations_management_netbox_email_use_tls | lower }}
DEFAULT_FROM_EMAIL = '{{ operations_management_netbox_email_from }}'
SERVER_EMAIL = '{{ operations_management_netbox_email_from }}'
{% endif %}

# LDAP Authentication
{% if operations_management_netbox_ldap_enabled %}
import ldap
from django_auth_ldap.config import LDAPSearch, GroupOfNamesType

AUTH_LDAP_SERVER_URI = '{{ operations_management_netbox_ldap_server_uri }}'
AUTH_LDAP_BIND_DN = '{{ operations_management_netbox_ldap_bind_dn }}'
AUTH_LDAP_BIND_PASSWORD = '{{ operations_management_netbox_ldap_bind_password }}'

AUTH_LDAP_USER_SEARCH = LDAPSearch(
    '{{ operations_management_netbox_ldap_user_search_base }}',
    ldap.SCOPE_SUBTREE,
    '(uid=%(user)s)'
)

{% if operations_management_netbox_ldap_group_search_base %}
AUTH_LDAP_GROUP_SEARCH = LDAPSearch(
    '{{ operations_management_netbox_ldap_group_search_base }}',
    ldap.SCOPE_SUBTREE,
    '(objectClass=groupOfNames)'
)
AUTH_LDAP_GROUP_TYPE = GroupOfNamesType()
{% endif %}

AUTH_LDAP_USER_ATTR_MAP = {
    'first_name': 'givenName',
    'last_name': 'sn',
    'email': 'mail'
}

AUTHENTICATION_BACKENDS = [
    'django_auth_ldap.backend.LDAPBackend',
    'django.contrib.auth.backends.ModelBackend',
]
{% endif %}

# CORS Configuration
{% if operations_management_netbox_cors_enabled %}
CORS_ALLOWED_ORIGINS = {{ operations_management_netbox_cors_origins | to_json }}
CORS_ALLOW_CREDENTIALS = True
{% endif %}

# Plugins
{% if operations_management_netbox_plugins %}
PLUGINS = [
{% for plugin in operations_management_netbox_plugins %}
    '{{ plugin.name }}',
{% endfor %}
]

PLUGINS_CONFIG = {
{% for plugin in operations_management_netbox_plugins %}
    '{{ plugin.name }}': {
{% for key, value in plugin.config.items() %}
        '{{ key }}': {{ value | to_json }},
{% endfor %}
    },
{% endfor %}
}
{% endif %}

# Webhooks
{% if operations_management_netbox_webhooks_enabled %}
WEBHOOKS_ENABLED = True
WEBHOOK_TIMEOUT = {{ operations_management_netbox_webhook_timeout }}
{% endif %}

# Custom Fields
{% if operations_management_netbox_custom_fields %}
CUSTOM_FIELDS = {
{% for field in operations_management_netbox_custom_fields %}
    '{{ field.name }}': {
{% for key, value in field.items() if key != 'name' %}
        '{{ key }}': {{ value | to_json }},
{% endfor %}
    },
{% endfor %}
}
{% endif %}

# Monitoring and Health Checks
{% if operations_management_netbox_health_check_enabled %}
HEALTH_CHECK_ENABLED = True
{% endif %}

# Logging Configuration
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '{levelname} {asctime} {module} {process:d} {thread:d} {message}',
            'style': '{',
        },
        'simple': {
            'format': '{levelname} {message}',
            'style': '{',
        },
    },
    'filters': {
        'require_debug_false': {
            '()': 'django.utils.log.RequireDebugFalse',
        },
    },
    'handlers': {
        'file': {
            'level': 'INFO',
            'class': 'logging.handlers.RotatingFileHandler',
            'filename': '/var/log/netbox/netbox.log',
            'maxBytes': 10485760,  # 10MB
            'backupCount': 5,
            'formatter': 'verbose',
        },
        'console': {
            'level': 'DEBUG' if DEBUG else 'INFO',
            'class': 'logging.StreamHandler',
            'formatter': 'simple' if DEBUG else 'verbose',
        },
        'mail_admins': {
            'level': 'ERROR',
            'filters': ['require_debug_false'],
            'class': 'django.utils.log.AdminEmailHandler',
            'formatter': 'verbose',
        },
    },
    'loggers': {
        'django': {
            'handlers': ['file', 'console'],
            'level': 'INFO',
            'propagate': False,
        },
        'netbox': {
            'handlers': ['file', 'console'],
            'level': 'DEBUG' if DEBUG else 'INFO',
            'propagate': False,
        },
        'django.security': {
            'handlers': ['file', 'console', 'mail_admins'],
            'level': 'INFO',
            'propagate': False,
        },
    },
    'root': {
        'handlers': ['file', 'console'],
        'level': 'WARNING',
    },
}
