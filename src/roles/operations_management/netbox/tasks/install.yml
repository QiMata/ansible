---
- name: Ensure prerequisite packages installed
  ansible.builtin.apt:
    name:
      - git
      - python3-venv
      - python3-dev
      - build-essential
      - libxml2-dev
      - libffi-dev
      - libpq-dev
      - libssl-dev
      - python3-pip
      - python3-setuptools
      - python3-wheel
      - expect  # For automated superuser creation
      - curl    # For health checks
    state: present
    update_cache: true

- name: Create netbox system user
  ansible.builtin.user:
    name: "{{ operations_management_netbox_user }}"
    system: true
    create_home: false
    shell: /usr/sbin/nologin

- name: Create NetBox directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: "{{ operations_management_netbox_user }}"
    group: "{{ operations_management_netbox_user }}"
    mode: '0755'
  loop:
    - "{{ operations_management_netbox_install_dir | dirname }}"
    - "/var/log/netbox"
    - "/run/netbox"

- name: Clone NetBox repository
  ansible.builtin.git:
    repo: "{{ operations_management_netbox_git_repo }}"
    dest: "{{ operations_management_netbox_install_dir }}"
    version: "{{ operations_management_netbox_branch }}"
    force: true
  notify: Restart NetBox

- name: Set ownership of NetBox directory
  ansible.builtin.file:
    path: "{{ operations_management_netbox_install_dir }}"
    owner: "{{ operations_management_netbox_user }}"
    group: "{{ operations_management_netbox_user }}"
    recurse: true

- name: Create virtualenv
  ansible.builtin.command: "{{ operations_management_netbox_python }} -m venv {{ operations_management_netbox_venv }}"
  args:
    creates: "{{ operations_management_netbox_venv }}/bin/activate"
  become: true
  become_user: "{{ operations_management_netbox_user }}"

- name: Upgrade pip in virtualenv
  ansible.builtin.pip:
    name: pip
    state: present
    virtualenv: "{{ operations_management_netbox_venv }}"
    extra_args: "--upgrade"
  become: true
  become_user: "{{ operations_management_netbox_user }}"

- name: Install NetBox requirements
  ansible.builtin.pip:
    requirements: "{{ operations_management_netbox_install_dir }}/requirements.txt"
    virtualenv: "{{ operations_management_netbox_venv }}"
  become: true
  become_user: "{{ operations_management_netbox_user }}"

- name: Install additional Python packages
  ansible.builtin.pip:
    name:
      - gunicorn
      - django-auth-ldap  # For LDAP support
      - redis
    virtualenv: "{{ operations_management_netbox_venv }}"
  become: true
  become_user: "{{ operations_management_netbox_user }}"

- name: Install plugin dependencies
  ansible.builtin.pip:
    name: "{{ item.name }}"
    virtualenv: "{{ operations_management_netbox_venv }}"
  loop: "{{ operations_management_netbox_plugins }}"
  when: operations_management_netbox_plugins | length > 0
  become: true
  become_user: "{{ operations_management_netbox_user }}"
