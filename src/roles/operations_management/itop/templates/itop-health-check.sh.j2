#!/bin/bash
# iTop Health Check Script
# Generated by Ansible

ITOP_URL="{{ itop_health_check_url }}"
ITOP_ROOT="{{ itop_root_dir }}"
LOG_FILE="/var/log/itop-health.log"

# Function to log messages
log_message() {
    echo "$(date '+%Y-%m-%d %H:%M:%S') - $1" >> "$LOG_FILE"
}

# Check if iTop is accessible
check_web_access() {
    local response=$(curl -s -o /dev/null -w "%{http_code}" "http://localhost${ITOP_URL}")
    if [ "$response" -eq 200 ]; then
        log_message "INFO: iTop web interface is accessible (HTTP $response)"
        return 0
    else
        log_message "ERROR: iTop web interface is not accessible (HTTP $response)"
        return 1
    fi
}

# Check database connectivity
check_database() {
    local db_check=$(mysql -h {{ itop_db_host }} -u {{ itop_db_user }} -p{{ itop_db_password }} -e "SELECT 1 FROM {{ itop_db_name }}.priv_user LIMIT 1;" 2>/dev/null)
    if [ $? -eq 0 ]; then
        log_message "INFO: Database connectivity is OK"
        return 0
    else
        log_message "ERROR: Database connectivity failed"
        return 1
    fi
}

# Check file permissions
check_permissions() {
    local config_file="${ITOP_ROOT}/conf/{{ itop_config_mode }}/config-itop.php"
    if [ -r "$config_file" ]; then
        log_message "INFO: Configuration file is readable"
        return 0
    else
        log_message "ERROR: Configuration file is not readable"
        return 1
    fi
}

# Check disk space
check_disk_space() {
    local usage=$(df "$ITOP_ROOT" | awk 'NR==2{print $5}' | sed 's/%//')
    if [ "$usage" -lt 90 ]; then
        log_message "INFO: Disk usage is OK ($usage%)"
        return 0
    else
        log_message "WARNING: Disk usage is high ($usage%)"
        return 1
    fi
}

# Main health check
main() {
    log_message "Starting iTop health check"
    
    local errors=0
    
    check_web_access || ((errors++))
    check_database || ((errors++))
    check_permissions || ((errors++))
    check_disk_space || ((errors++))
    
    if [ $errors -eq 0 ]; then
        log_message "INFO: All health checks passed"
        exit 0
    else
        log_message "ERROR: $errors health check(s) failed"
        exit 1
    fi
}

main "$@"
