# Keepalived configuration file
# Generated by Ansible - Do not edit manually

{% if keepalived_global_defs %}
global_defs {
{% if keepalived_global_defs.notification_email | length > 0 %}
    notification_email {
{% for email in keepalived_global_defs.notification_email %}
        {{ email }}
{% endfor %}
    }
{% endif %}
{% if keepalived_global_defs.notification_email_from %}
    notification_email_from {{ keepalived_global_defs.notification_email_from }}
{% endif %}
{% if keepalived_global_defs.smtp_server %}
    smtp_server {{ keepalived_global_defs.smtp_server }}
{% endif %}
{% if keepalived_global_defs.smtp_connect_timeout %}
    smtp_connect_timeout {{ keepalived_global_defs.smtp_connect_timeout }}
{% endif %}
{% if keepalived_global_defs.router_id %}
    router_id {{ keepalived_global_defs.router_id }}
{% endif %}
{% if keepalived_global_defs.enable_traps %}
    enable_traps
{% endif %}
{% if keepalived_enable_snmp %}
    enable_snmp_keepalived
{% if keepalived_snmp_socket %}
    snmp_socket {{ keepalived_snmp_socket }}
{% endif %}
{% endif %}
}
{% endif %}

{% if keepalived_vrrp_scripts | length > 0 %}
# VRRP Scripts for health checking
{% for script in keepalived_vrrp_scripts %}
vrrp_script {{ script.name }} {
    script "{{ script.script }}"
{% if script.interval is defined %}
    interval {{ script.interval }}
{% endif %}
{% if script.timeout is defined %}
    timeout {{ script.timeout }}
{% endif %}
{% if script.weight is defined %}
    weight {{ script.weight }}
{% endif %}
{% if script.fall is defined %}
    fall {{ script.fall }}
{% endif %}
{% if script.rise is defined %}
    rise {{ script.rise }}
{% endif %}
{% if script.user is defined %}
    user {{ script.user }}
{% endif %}
{% if script.init_fail is defined and script.init_fail %}
    init_fail
{% endif %}
}

{% endfor %}
{% endif %}

{% if keepalived_vrrp_sync_groups | length > 0 %}
# VRRP Sync Groups
{% for group in keepalived_vrrp_sync_groups %}
vrrp_sync_group {{ group.name }} {
    group {
{% for instance in group.instances %}
        {{ instance }}
{% endfor %}
    }
{% if group.notify_master %}
    notify_master "{{ group.notify_master }}"
{% endif %}
{% if group.notify_backup %}
    notify_backup "{{ group.notify_backup }}"
{% endif %}
{% if group.notify_fault %}
    notify_fault "{{ group.notify_fault }}"
{% endif %}
{% if group.notify %}
    notify "{{ group.notify }}"
{% endif %}
{% if group.smtp_alert is defined and group.smtp_alert %}
    smtp_alert
{% endif %}
}

{% endfor %}
{% endif %}

# VRRP Instances
{% if keepalived_vrrp_instances | length > 0 %}
{% for instance in keepalived_vrrp_instances %}
vrrp_instance {{ instance.name }} {
    state {{ instance.state | default('BACKUP') }}
    interface {{ instance.interface | default(keepalived_interface) }}
    virtual_router_id {{ instance.virtual_router_id | default(keepalived_router_id) }}
    priority {{ instance.priority | default(keepalived_priority) }}
{% if instance.advert_int is defined %}
    advert_int {{ instance.advert_int }}
{% endif %}
{% if instance.master_down_interval is defined %}
    master_down_interval {{ instance.master_down_interval }}
{% endif %}
{% if instance.preempt is defined and not instance.preempt %}
    nopreempt
{% endif %}
{% if instance.preempt_delay is defined and instance.preempt_delay > 0 %}
    preempt_delay {{ instance.preempt_delay }}
{% endif %}
{% if instance.debug is defined and instance.debug %}
    debug {{ instance.debug }}
{% endif %}
{% if instance.use_vmac is defined and instance.use_vmac %}
    use_vmac
{% if instance.vmac_xmit_base is defined and instance.vmac_xmit_base %}
    vmac_xmit_base
{% endif %}
{% endif %}

{% if instance.unicast_src_ip or instance.unicast_peers | length > 0 %}
{% if instance.unicast_src_ip %}
    unicast_src_ip {{ instance.unicast_src_ip }}
{% endif %}
{% if instance.unicast_peers | length > 0 %}
    unicast_peer {
{% for peer in instance.unicast_peers %}
        {{ peer }}
{% endfor %}
    }
{% endif %}
{% endif %}

{% if instance.authentication is defined and instance.authentication.auth_type %}
{% if instance.authentication.auth_type != 'none' %}
    authentication {
        auth_type {{ instance.authentication.auth_type }}
{% if instance.authentication.auth_type == 'PASS' and instance.authentication.auth_pass %}
        auth_pass {{ instance.authentication.auth_pass }}
{% elif instance.authentication.auth_type == 'AH' and instance.authentication.ah_key %}
        auth_pass {{ instance.authentication.ah_key }}
{% endif %}
    }
{% endif %}
{% endif %}

{% if instance.virtual_ipaddresses | length > 0 %}
    virtual_ipaddress {
{% for vip in instance.virtual_ipaddresses %}
        {{ vip.ip }}{% if vip.cidr is defined %}/{{ vip.cidr }}{% endif %}{% if vip.dev %} dev {{ vip.dev }}{% endif %}{% if vip.scope %} scope {{ vip.scope }}{% endif %}{% if vip.label %} label {{ vip.label }}{% endif %}
{% endfor %}
    }
{% endif %}

{% if instance.virtual_ipaddresses_excluded | length > 0 %}
    virtual_ipaddress_excluded {
{% for vip in instance.virtual_ipaddresses_excluded %}
        {{ vip.ip }}{% if vip.cidr is defined %}/{{ vip.cidr }}{% endif %}{% if vip.dev %} dev {{ vip.dev }}{% endif %}{% if vip.scope %} scope {{ vip.scope }}{% endif %}{% if vip.label %} label {{ vip.label }}{% endif %}
{% endfor %}
    }
{% endif %}

{% if instance.virtual_routes | length > 0 %}
    virtual_routes {
{% for route in instance.virtual_routes %}
        {{ route.dst }} via {{ route.via }}{% if route.dev %} dev {{ route.dev }}{% endif %}{% if route.scope %} scope {{ route.scope }}{% endif %}
{% endfor %}
    }
{% endif %}

{% if instance.track_interfaces | length > 0 %}
    track_interface {
{% for iface in instance.track_interfaces %}
        {{ iface.name }}{% if iface.weight is defined %} weight {{ iface.weight }}{% endif %}
{% endfor %}
    }
{% endif %}

{% if instance.track_scripts | length > 0 %}
    track_script {
{% for script in instance.track_scripts %}
        {{ script }}
{% endfor %}
    }
{% endif %}

{% if instance.notify_master %}
    notify_master "{{ instance.notify_master }}"
{% endif %}
{% if instance.notify_backup %}
    notify_backup "{{ instance.notify_backup }}"
{% endif %}
{% if instance.notify_fault %}
    notify_fault "{{ instance.notify_fault }}"
{% endif %}
{% if instance.notify_stop %}
    notify_stop "{{ instance.notify_stop }}"
{% endif %}
{% if instance.notify %}
    notify "{{ instance.notify }}"
{% endif %}
{% if instance.smtp_alert is defined and instance.smtp_alert %}
    smtp_alert
{% endif %}
}

{% endfor %}
{% else %}
# Legacy single instance configuration (backward compatibility)
vrrp_instance VI_{{ keepalived_router_id }} {
    state {{ keepalived_state }}
    interface {{ keepalived_interface }}
    virtual_router_id {{ keepalived_router_id }}
    priority {{ keepalived_priority }}
    advert_int 1
    authentication {
        auth_type PASS
        auth_pass {{ keepalived_auth_pass }}
    }
    virtual_ipaddress {
        {{ keepalived_virtual_ip }}/{{ keepalived_virtual_cidr }}
    }
}
{% endif %}
