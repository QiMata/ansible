---
- name: Create Vault PKI role for step-ca
  ansible.builtin.command: >
    vault write pki/roles/{{ vault_stepca_role }}
    allow_any_name=true
    max_ttl={{ vault_pki_max_ttl }}
  register: _pki_role
  changed_when: "'Success' in _pki_role.stdout"
  environment:
    VAULT_ADDR: "http://127.0.0.1:{{ vault_port }}"
  no_log: true

- name: Write Vault policy for step-ca
  ansible.builtin.copy:
    dest: /tmp/{{ vault_stepca_policy }}.hcl
    content: |
      path "pki/sign/{{ vault_stepca_role }}" {
        capabilities = ["create","update"]
      }
      path "pki/issue/{{ vault_stepca_role }}" {
        capabilities = ["create"]
      }
      path "pki/revoke" {
        capabilities = ["update"]
      }
  register: _policy_file

- name: Apply Vault policy
  ansible.builtin.command: >
    vault policy write {{ vault_stepca_policy }} /tmp/{{ vault_stepca_policy }}.hcl
  register: _policy_write
  changed_when: "'Success' in _policy_write.stdout"
  environment:
    VAULT_ADDR: "http://127.0.0.1:{{ vault_port }}"
  no_log: true

- name: Enable AppRole auth
  ansible.builtin.command: >
    vault auth enable approle
  register: _enable_approle
  changed_when: "'successfully enabled' in _enable_approle.stdout"
  failed_when: false
  environment:
    VAULT_ADDR: "http://127.0.0.1:{{ vault_port }}"
  no_log: true

- name: Create AppRole for step-ca
  ansible.builtin.command: >
    vault write auth/approle/role/{{ vault_stepca_role }}
    token_policies="{{ vault_stepca_policy }}"
    token_ttl={{ vault_stepca_token_ttl }}
    token_max_ttl={{ vault_stepca_token_ttl }}
  register: _approle
  changed_when: "'Success' in _approle.stdout"
  environment:
    VAULT_ADDR: "http://127.0.0.1:{{ vault_port }}"
  no_log: true
