---
# Example pfSense Playbook
# This playbook demonstrates how to use the pfSense role with various configurations

- name: Configure pfSense Firewall
  hosts: pfsense_firewalls
  gather_facts: false
  vars:
    # Connection settings (use vault for sensitive data)
    pfsense_username: admin
    pfsense_password: "{{ vault_pfsense_password }}"

    # Enable components you want to configure
    pfsense_configure_system_settings: true
    pfsense_configure_interfaces: true
    pfsense_configure_vlans: true
    pfsense_configure_dhcp: true
    pfsense_configure_dns: true
    pfsense_configure_aliases: true
    pfsense_configure_nat: true
    pfsense_configure_firewall_rules: true
    pfsense_configure_openvpn: true
    pfsense_perform_backup: true

    # System configuration
    pfsense_system_settings:
      hostname: fw01
      domain: company.local
      timezone: America/New_York
      dns_servers:
        - 1.1.1.1
        - 8.8.8.8
      ntp_servers:
        - pool.ntp.org
      webgui_settings:
        protocol: https
        port: 8443
        redirect_http: true

    # Network interfaces
    pfsense_interfaces:
      - interface: wan
        enable: true
        descr: "WAN Interface"
        type: dhcp
        blockpriv: true
        blockbogons: true
      - interface: lan
        enable: true
        descr: "LAN Interface"
        type: static
        ipaddr: 192.168.1.1
        subnet: 24
      - interface: opt1
        enable: true
        descr: "DMZ Interface"
        type: static
        ipaddr: 10.1.1.1
        subnet: 24

    # VLANs
    pfsense_vlans:
      - tag: 10
        if: igb1
        descr: "Management VLAN"
        configure_interface: true
        type: static
        ipaddr: 192.168.10.1
        subnet: 24
      - tag: 20
        if: igb1
        descr: "Guest VLAN"
        configure_interface: true
        type: static
        ipaddr: 192.168.20.1
        subnet: 24

    # DHCP servers
    pfsense_dhcp_servers:
      - interface: lan
        enable: true
        range_from: "192.168.1.100"
        range_to: "192.168.1.200"
        dns_servers:
          - "192.168.1.1"
        default_lease_time: 7200
        max_lease_time: 86400
        static_mappings:
          - mac: "00:11:22:33:44:55"
            ipaddr: "192.168.1.10"
            hostname: "server01"
            descr: "Main server"
      - interface: opt1
        enable: true
        range_from: "10.1.1.100"
        range_to: "10.1.1.150"
        dns_servers:
          - "10.1.1.1"

    # DNS configuration
    pfsense_dns_resolver:
      enable: true
      dhcp_registration: true
      static_dhcp_registration: true

    pfsense_dns_host_overrides:
      - host: "router"
        domain: "company.local"
        ip: "192.168.1.1"
        descr: "Router management"

    # Firewall aliases
    pfsense_aliases:
      - name: "RFC1918_Networks"
        type: network
        address:
          - "10.0.0.0/8"
          - "172.16.0.0/12"
          - "192.168.0.0/16"
        descr: "Private Networks"
      - name: "Web_Ports"
        type: port
        address:
          - "80"
          - "443"
        descr: "Web server ports"
      - name: "Internal_Servers"
        type: host
        address:
          - "192.168.1.10"
          - "192.168.1.11"
          - "192.168.1.12"
        descr: "Internal server IPs"

    # NAT rules
    pfsense_nat_rules:
      - interface: wan
        protocol: tcp
        destination_port: "80"
        target: "192.168.1.10"
        local_port: "80"
        descr: "Web Server HTTP"
      - interface: wan
        protocol: tcp
        destination_port: "443"
        target: "192.168.1.10"
        local_port: "443"
        descr: "Web Server HTTPS"
      - interface: wan
        protocol: tcp
        destination_port: "2222"
        target: "192.168.1.11"
        local_port: "22"
        descr: "SSH to internal server"

    # Firewall rules
    pfsense_firewall_rules:
      # LAN rules
      - interface: lan
        action: pass
        protocol: any
        source: lan_net
        destination: any
        descr: "Allow LAN to any"

      # DMZ rules
      - interface: opt1
        action: pass
        protocol: tcp
        source: opt1_net
        destination: any
        destination_port: "80,443"
        descr: "Allow DMZ HTTP/HTTPS outbound"
      - interface: opt1
        action: pass
        protocol: udp
        source: opt1_net
        destination: any
        destination_port: "53"
        descr: "Allow DMZ DNS outbound"
      - interface: opt1
        action: block
        protocol: any
        source: opt1_net
        destination: "RFC1918_Networks"
        descr: "Block DMZ to private networks"

      # WAN rules
      - interface: wan
        action: pass
        protocol: tcp
        source: any
        destination: wan_address
        destination_port: "80,443"
        descr: "Allow web traffic to web server"
      - interface: wan
        action: pass
        protocol: tcp
        source: any
        destination: wan_address
        destination_port: "2222"
        descr: "Allow SSH to internal server"

    # OpenVPN server
    pfsense_openvpn:
      servers:
        - descr: "Remote Access VPN"
          mode: "server_user"
          protocol: "udp4"
          interface: "wan"
          local_port: 1194
          caref: "{{ openvpn_ca_ref }}"
          crtref: "{{ openvpn_cert_ref }}"
          tunnel_network: "10.8.0.0/24"
          local_network: "192.168.1.0/24"
          dns_server_enable: true
          dns_server1: "192.168.1.1"
          gwredir: true
          compression: "adaptive"
          client2client: false

    # Backup configuration
    pfsense_backup:
      enabled: true
      local_path: "/tmp/pfsense_backup.xml"
      encryption_password: "{{ vault_backup_password }}"
      remote_backup: true
      remote_host: "backup.company.local"
      remote_path: "/backups/pfsense/{{ inventory_hostname }}_{{ ansible_date_time.date }}.xml"
      cleanup_local: true

  roles:
    - pfsense

  post_tasks:
    - name: Verify pfSense is responding
      ansible.builtin.uri:
        url: "https://{{ pfsense_host }}:{{ pfsense_port }}"
        validate_certs: "{{ pfsense_validate_certs | bool }}"
        timeout: 10
      delegate_to: localhost

    - name: Display completion message
      ansible.builtin.debug:
        msg: "pfSense configuration completed successfully for {{ inventory_hostname }}"
