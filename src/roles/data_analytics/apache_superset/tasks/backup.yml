---
# Backup and Recovery Tasks
# Note: For PostgreSQL-specific backups, consider using the postgres_backup role

- name: Create backup directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: "{{ apache_superset_user }}"
    group: "{{ apache_superset_group }}"
    mode: '0750'
  loop:
    - "{{ apache_superset_db_backup_path }}"
    - "{{ apache_superset_config_backup_path }}"
  when: item != ""
  tags: ['superset', 'apache_superset_backup']

- name: Create database backup script
  ansible.builtin.template:
    src: backup_database.sh.j2
    dest: "{{ apache_superset_install_dir }}/backup_database.sh"
    owner: "{{ apache_superset_user }}"
    group: "{{ apache_superset_group }}"
    mode: '0750'
  when: apache_superset_db_backup_enabled
  tags: ['superset', 'apache_superset_backup']

- name: Create configuration backup script
  ansible.builtin.template:
    src: backup_config.sh.j2
    dest: "{{ apache_superset_install_dir }}/backup_config.sh"
    owner: "{{ apache_superset_user }}"
    group: "{{ apache_superset_group }}"
    mode: '0750'
  when: apache_superset_config_backup_enabled
  tags: ['superset', 'apache_superset_backup']

- name: Create database backup cleanup script
  ansible.builtin.template:
    src: cleanup_db_backups.sh.j2
    dest: "{{ apache_superset_install_dir }}/cleanup_db_backups.sh"
    owner: "{{ apache_superset_user }}"
    group: "{{ apache_superset_group }}"
    mode: '0750'
  when: apache_superset_db_backup_enabled
  tags: ['superset', 'apache_superset_backup']

- name: Create config backup cleanup script
  ansible.builtin.template:
    src: cleanup_config_backups.sh.j2
    dest: "{{ apache_superset_install_dir }}/cleanup_config_backups.sh"
    owner: "{{ apache_superset_user }}"
    group: "{{ apache_superset_group }}"
    mode: '0750'
  when: apache_superset_config_backup_enabled
  tags: ['superset', 'apache_superset_backup']

- name: Schedule database backup cron job
  vars:
    apache_superset_db_backup_schedule_parts: "{{ apache_superset_db_backup_schedule.split() }}"
  ansible.builtin.cron:
    name: "Superset database backup"
    minute: "{{ apache_superset_db_backup_schedule_parts[0] }}"
    hour: "{{ apache_superset_db_backup_schedule_parts[1] }}"
    day: "{{ apache_superset_db_backup_schedule_parts[2] }}"
    month: "{{ apache_superset_db_backup_schedule_parts[3] }}"
    weekday: "{{ apache_superset_db_backup_schedule_parts[4] }}"
    user: "{{ apache_superset_user }}"
    job: "{{ apache_superset_install_dir }}/backup_database.sh"
    state: present
  when:
    - apache_superset_db_backup_enabled
    - apache_superset_db_backup_schedule_parts | length == 5
  tags: ['superset', 'apache_superset_backup']

- name: Schedule configuration backup cron job
  vars:
    apache_superset_config_backup_schedule_parts: "{{ apache_superset_config_backup_schedule.split() }}"
  ansible.builtin.cron:
    name: "Superset configuration backup"
    minute: "{{ apache_superset_config_backup_schedule_parts[0] }}"
    hour: "{{ apache_superset_config_backup_schedule_parts[1] }}"
    day: "{{ apache_superset_config_backup_schedule_parts[2] }}"
    month: "{{ apache_superset_config_backup_schedule_parts[3] }}"
    weekday: "{{ apache_superset_config_backup_schedule_parts[4] }}"
    user: "{{ apache_superset_user }}"
    job: "{{ apache_superset_install_dir }}/backup_config.sh"
    state: present
  when:
    - apache_superset_config_backup_enabled
    - apache_superset_config_backup_schedule_parts | length == 5
  tags: ['superset', 'apache_superset_backup']

- name: Schedule database backup cleanup cron job
  ansible.builtin.cron:
    name: "Superset database backup cleanup"
    minute: '30'
    hour: '3'
    day: '*'
    month: '*'
    weekday: '*'
    user: "{{ apache_superset_user }}"
    job: "{{ apache_superset_install_dir }}/cleanup_db_backups.sh"
    state: present
  when: apache_superset_db_backup_enabled
  tags: ['superset', 'apache_superset_backup']

- name: Schedule config backup cleanup cron job
  ansible.builtin.cron:
    name: "Superset config backup cleanup"
    minute: '35'
    hour: '3'
    day: '*'
    month: '*'
    weekday: '*'
    user: "{{ apache_superset_user }}"
    job: "{{ apache_superset_install_dir }}/cleanup_config_backups.sh"
    state: present
  when: apache_superset_config_backup_enabled
  tags: ['superset', 'apache_superset_backup']

- name: Display backup configuration
  ansible.builtin.debug:
    msg:
      - "Database backup enabled: {{ apache_superset_db_backup_enabled }}"
      - "Database backup schedule: {{ apache_superset_db_backup_schedule if apache_superset_db_backup_enabled else 'N/A' }}"
      - "Config backup enabled: {{ apache_superset_config_backup_enabled }}"
      - "Config backup schedule: {{ apache_superset_config_backup_schedule if apache_superset_config_backup_enabled else 'N/A' }}"
  tags: ['superset', 'apache_superset_backup']
