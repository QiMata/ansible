---
# SSL/TLS Certificate Setup for Airflow
- name: Create SSL directory
  ansible.builtin.file:
    path: "{{ apache_airflow_home }}/ssl"
    state: directory
    owner: "{{ apache_airflow_user }}"
    group: "{{ apache_airflow_group }}"
    mode: '0700'
  when: apache_airflow_ssl_enabled

- name: Setup SSL certificates using Step CA
  when:
    - apache_airflow_ssl_enabled
    - apache_airflow_ssl_use_step_ca
  block:
    - name: Include step-ca role for internal certificates
      ansible.builtin.include_role:
        name: step_ca
      vars:
        step_ca_certificate_request:
          - name: airflow
            common_name: "{{ inventory_hostname }}"
            sans:
              - "{{ ansible_default_ipv4.address }}"
              - "{{ inventory_hostname }}"
              - "airflow.{{ ansible_domain | default('local') }}"
            destination: "{{ apache_airflow_home }}/ssl"
            owner: "{{ apache_airflow_user }}"
            group: "{{ apache_airflow_group }}"

    - name: Set certificate paths for Step CA
      ansible.builtin.set_fact:
        apache_airflow_ssl_cert_path: "{{ apache_airflow_home }}/ssl/airflow.crt"
        apache_airflow_ssl_key_path: "{{ apache_airflow_home }}/ssl/airflow.key"
        apache_airflow_ssl_ca_cert_path: "{{ apache_airflow_home }}/ssl/ca.crt"
- name: Setup SSL certificates using Let's Encrypt
  when:
    - apache_airflow_ssl_enabled
    - apache_airflow_ssl_use_letsencrypt
  block:
    - name: Include letsencrypt role for public certificates
      ansible.builtin.include_role:
        name: letsencrypt_setup
      vars:
        letsencrypt_domains: "{{ apache_airflow_letsencrypt_domains }}"  # noqa var-naming
        letsencrypt_cert_path: "{{ apache_airflow_letsencrypt_cert_path }}"  # noqa var-naming
        letsencrypt_cert_owner: "{{ apache_airflow_letsencrypt_cert_owner }}"  # noqa var-naming
        letsencrypt_cert_group: "{{ apache_airflow_letsencrypt_cert_group }}"  # noqa var-naming

    - name: Set certificate paths for Let's Encrypt
      ansible.builtin.set_fact:
        apache_airflow_ssl_cert_path: "{{ apache_airflow_home }}/ssl/fullchain.pem"
        apache_airflow_ssl_key_path: "{{ apache_airflow_home }}/ssl/privkey.pem"
- name: Copy custom SSL certificate
  ansible.builtin.copy:
    src: "{{ apache_airflow_ssl_cert_file }}"
    dest: "{{ apache_airflow_ssl_cert_path }}"
    owner: "{{ apache_airflow_user }}"
    group: "{{ apache_airflow_group }}"
    mode: '0644'
  when:
    - apache_airflow_ssl_enabled
    - not apache_airflow_ssl_use_step_ca
    - not apache_airflow_ssl_use_letsencrypt
    - apache_airflow_ssl_cert_file is defined
  notify: Restart airflow services

- name: Copy custom SSL private key
  ansible.builtin.copy:
    src: "{{ apache_airflow_ssl_key_file }}"
    dest: "{{ apache_airflow_ssl_key_path }}"
    owner: "{{ apache_airflow_user }}"
    group: "{{ apache_airflow_group }}"
    mode: '0600'
  when:
    - apache_airflow_ssl_enabled
    - not apache_airflow_ssl_use_step_ca
    - not apache_airflow_ssl_use_letsencrypt
    - apache_airflow_ssl_key_file is defined
  notify: Restart airflow services

- name: Copy custom CA certificate
  ansible.builtin.copy:
    src: "{{ apache_airflow_ssl_ca_cert_file }}"
    dest: "{{ apache_airflow_ssl_ca_cert_path }}"
    owner: "{{ apache_airflow_user }}"
    group: "{{ apache_airflow_group }}"
    mode: '0644'
  when:
    - apache_airflow_ssl_enabled
    - not apache_airflow_ssl_use_step_ca
    - not apache_airflow_ssl_use_letsencrypt
    - apache_airflow_ssl_ca_cert_file is defined
  notify: Restart airflow services

- name: Verify SSL certificate
  ansible.builtin.command:
    cmd: openssl x509 -in {{ apache_airflow_ssl_cert_path }} -text -noout
  register: ssl_cert_info
  changed_when: false
  when: apache_airflow_ssl_enabled

- name: Display SSL certificate information
  ansible.builtin.debug:
    msg: "SSL certificate valid for: {{ ssl_cert_info.stdout | regex_search('DNS:([^,\\s]+)', '\\1') | join(', ') }}"
  when:
    - apache_airflow_ssl_enabled
    - ssl_cert_info is defined
