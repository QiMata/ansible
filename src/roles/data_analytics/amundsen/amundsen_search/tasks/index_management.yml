---
# Elasticsearch index management tasks

- name: Install curator for index management
  ansible.builtin.pip:
    virtualenv: "{{ amundsen_search_virtualenv }}"
    name: "elasticsearch-curator>=5.8.0"
    state: present
  become: true
  become_user: amundsen

- name: Create index template
  ansible.builtin.uri:
    url: "{{ amundsen_search_es_scheme }}://{{ amundsen_search_es_host }}:{{ amundsen_search_es_port }}/_index_template/amundsen_search"
    method: PUT
    body_format: json
    body:
      index_patterns: ["{{ amundsen_search_es_index }}*"]
      template:
        settings:
          number_of_shards: 1
          number_of_replicas: 1
          index:
            max_result_window: "{{ amundsen_search_max_result_size }}"
        mappings:
          properties:
            name:
              type: text
              analyzer: standard
            description:
              type: text
              analyzer: standard
            tags:
              type: keyword
            schema:
              type: keyword
            table_name:
              type: keyword
    user: "{{ amundsen_search_es_username if amundsen_search_es_auth_enabled else omit }}"
    password: "{{ amundsen_search_es_password if amundsen_search_es_auth_enabled else omit }}"
    force_basic_auth: "{{ amundsen_search_es_auth_enabled and amundsen_search_es_auth_type == 'basic' }}"
    validate_certs: "{{ amundsen_search_es_verify_certs }}"
  when: amundsen_search_index_template != ""
  delegate_to: localhost
  become: false

- name: Create index lifecycle policy
  ansible.builtin.uri:
    url: "{{ amundsen_search_es_scheme }}://{{ amundsen_search_es_host }}:{{ amundsen_search_es_port }}/_ilm/policy/amundsen_search_policy"
    method: PUT
    body_format: json
    body:
      policy:
        phases:
          hot:
            actions:
              rollover:
                max_size: "50gb"
                max_age: "30d"
          warm:
            min_age: "7d"
            actions:
              allocate:
                number_of_replicas: 0
          cold:
            min_age: "30d"
            actions:
              allocate:
                number_of_replicas: 0
          delete:
            min_age: "{{ amundsen_search_data_retention_days }}d"
    user: "{{ amundsen_search_es_username if amundsen_search_es_auth_enabled else omit }}"
    password: "{{ amundsen_search_es_password if amundsen_search_es_auth_enabled else omit }}"
    force_basic_auth: "{{ amundsen_search_es_auth_enabled and amundsen_search_es_auth_type == 'basic' }}"
    validate_certs: "{{ amundsen_search_es_verify_certs }}"
  when:
    - amundsen_search_index_lifecycle_policy != ""
    - amundsen_search_data_retention_enabled
  delegate_to: localhost
  become: false

- name: Create index alias
  ansible.builtin.uri:
    url: "{{ amundsen_search_es_scheme }}://{{ amundsen_search_es_host }}:{{ amundsen_search_es_port }}/_aliases"
    method: POST
    body_format: json
    body:
      actions:
        - add:
            index: "{{ amundsen_search_es_index }}"
            alias: "{{ amundsen_search_es_alias }}"
    user: "{{ amundsen_search_es_username if amundsen_search_es_auth_enabled else omit }}"
    password: "{{ amundsen_search_es_password if amundsen_search_es_auth_enabled else omit }}"
    force_basic_auth: "{{ amundsen_search_es_auth_enabled and amundsen_search_es_auth_type == 'basic' }}"
    validate_certs: "{{ amundsen_search_es_verify_certs }}"
  delegate_to: localhost
  become: false

- name: Deploy curator configuration
  ansible.builtin.template:
    src: curator.yml.j2
    dest: "/etc/amundsen/search/curator.yml"
    owner: amundsen
    group: amundsen
    mode: "0644"
  become: true

- name: Deploy curator action file
  ansible.builtin.template:
    src: curator_actions.yml.j2
    dest: "/etc/amundsen/search/curator_actions.yml"
    owner: amundsen
    group: amundsen
    mode: "0644"
  become: true

- name: Create index optimization cron job
  ansible.builtin.cron:
    name: "Amundsen Search Index Optimization"
    job: "{{ amundsen_search_virtualenv }}/bin/curator --config /etc/amundsen/search/curator.yml /etc/amundsen/search/curator_actions.yml"
    minute: "{{ amundsen_search_index_optimization_schedule.split()[0] }}"
    hour: "{{ amundsen_search_index_optimization_schedule.split()[1] }}"
    user: amundsen
  become: true
  when: amundsen_search_index_optimization_enabled

- name: Create index warming script
  ansible.builtin.template:
    src: index_warming.py.j2
    dest: "{{ amundsen_search_virtualenv }}/index_warming.py"
    owner: amundsen
    group: amundsen
    mode: "0755"
  become: true
  when: amundsen_search_index_warming_enabled

- name: Create index warming systemd service
  ansible.builtin.template:
    src: index_warming.service.j2
    dest: "/etc/systemd/system/amundsen-search-warming{{ '-' + amundsen_search_instance_id if amundsen_search_multi_instance else '' }}.service"
    mode: "0644"
  become: true
  when: amundsen_search_index_warming_enabled
  notify: Reload Systemd

- name: Enable and start index warming service
  ansible.builtin.systemd:
    name: "amundsen-search-warming{{ '-' + amundsen_search_instance_id if amundsen_search_multi_instance else '' }}"
    enabled: true
    state: started
  become: true
  when: amundsen_search_index_warming_enabled
