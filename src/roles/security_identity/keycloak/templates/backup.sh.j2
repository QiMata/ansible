#!/bin/bash
# Keycloak Backup Script

# Configuration
BACKUP_DIR="{{ keycloak_backup_dir }}"
TIMESTAMP=$(date +%Y%m%d_%H%M%S)
BACKUP_NAME="keycloak_backup_${TIMESTAMP}"

# Database backup
echo "Starting Keycloak backup: ${BACKUP_NAME}"

# Create backup directory for this run
mkdir -p "${BACKUP_DIR}/${BACKUP_NAME}"

# Database backup
echo "Backing up database..."
PGPASSWORD="{{ keycloak_db_password }}" pg_dump \
  -h "{{ keycloak_db_host }}" \
  -p "{{ keycloak_db_port }}" \
  -U "{{ keycloak_db_user }}" \
  -d "{{ keycloak_db_name }}" \
  -f "${BACKUP_DIR}/${BACKUP_NAME}/database.sql"

if [ $? -eq 0 ]; then
    echo "Database backup completed successfully"
else
    echo "Database backup failed"
    exit 1
fi

# Keycloak configuration backup
echo "Backing up Keycloak configuration..."
tar -czf "${BACKUP_DIR}/${BACKUP_NAME}/keycloak_config.tar.gz" \
  -C "{{ keycloak_install_dir }}" \
  conf/ themes/ providers/

# Export realms
echo "Exporting realms..."
{{ keycloak_install_dir }}/bin/kc.sh export \
  --dir "${BACKUP_DIR}/${BACKUP_NAME}/realms" \
  --users realm_file

# Create backup manifest
cat > "${BACKUP_DIR}/${BACKUP_NAME}/manifest.txt" << EOF
Backup created: $(date)
Keycloak version: {{ keycloak_version }}
Database host: {{ keycloak_db_host }}
Database name: {{ keycloak_db_name }}
EOF

# Compress the entire backup
echo "Compressing backup..."
tar -czf "${BACKUP_DIR}/${BACKUP_NAME}.tar.gz" \
  -C "${BACKUP_DIR}" \
  "${BACKUP_NAME}"

# Remove uncompressed backup
rm -rf "${BACKUP_DIR}/${BACKUP_NAME}"

echo "Backup completed: ${BACKUP_DIR}/${BACKUP_NAME}.tar.gz"
