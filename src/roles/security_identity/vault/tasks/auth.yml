---
# Authentication methods configuration

- name: Wait for Vault to be ready
  ansible.builtin.uri:
    url: "http://{{ vault_addr }}:{{ vault_port }}/v1/sys/health"
    method: GET
    status_code: [200, 429, 501, 503]
  register: vault_health_check
  until: vault_health_check.status in [200, 429, 501, 503]
  retries: 30
  delay: 5

- name: Check if Vault is initialized
  ansible.builtin.uri:
    url: "http://{{ vault_addr }}:{{ vault_port }}/v1/sys/init"
    method: GET
    status_code: [200, 204, 404]
  register: vault_init_status

- name: Configure authentication methods
  ansible.builtin.uri:
    url: "http://{{ vault_addr }}:{{ vault_port }}/v1/sys/auth/{{ item.name }}"
    method: POST
    headers:
      X-Vault-Token: "{{ vault_root_token | default('') }}"
    body_format: json
    body:
      type: "{{ item.type }}"
      config: "{{ item.config | default({}) }}"
    status_code: [200, 204, 400]
  loop: "{{ vault_auth_methods }}"
  when:
    - vault_init_status.json.initialized | default(false)
    - vault_root_token is defined

- name: Configure LDAP authentication method
  ansible.builtin.uri:
    url: "http://{{ vault_addr }}:{{ vault_port }}/v1/auth/{{ item.name }}/config"
    method: POST
    headers:
      X-Vault-Token: "{{ vault_root_token | default('') }}"
    body_format: json
    body: "{{ item.config }}"
    status_code: [200, 204, 400]
  loop: "{{ vault_auth_methods }}"
  when:
    - vault_init_status.json.initialized | default(false)
    - vault_root_token is defined
    - item.type == "ldap"

- name: Configure OIDC authentication method
  ansible.builtin.uri:
    url: "http://{{ vault_addr }}:{{ vault_port }}/v1/auth/{{ item.name }}/config"
    method: POST
    headers:
      X-Vault-Token: "{{ vault_root_token | default('') }}"
    body_format: json
    body: "{{ item.config }}"
    status_code: [200, 204, 400]
  loop: "{{ vault_auth_methods }}"
  when:
    - vault_init_status.json.initialized | default(false)
    - vault_root_token is defined
    - item.type == "oidc"

- name: Configure Kubernetes authentication method
  ansible.builtin.uri:
    url: "http://{{ vault_addr }}:{{ vault_port }}/v1/auth/{{ item.name }}/config"
    method: POST
    headers:
      X-Vault-Token: "{{ vault_root_token | default('') }}"
    body_format: json
    body: "{{ item.config }}"
    status_code: [200, 204, 400]
  loop: "{{ vault_auth_methods }}"
  when:
    - vault_init_status.json.initialized | default(false)
    - vault_root_token is defined
    - item.type == "kubernetes"

- name: Configure AWS IAM authentication method
  ansible.builtin.uri:
    url: "http://{{ vault_addr }}:{{ vault_port }}/v1/auth/{{ item.name }}/config/client"
    method: POST
    headers:
      X-Vault-Token: "{{ vault_root_token | default('') }}"
    body_format: json
    body: "{{ item.config }}"
    status_code: [200, 204, 400]
  loop: "{{ vault_auth_methods }}"
  when:
    - vault_init_status.json.initialized | default(false)
    - vault_root_token is defined
    - item.type == "aws"

- name: Configure GitHub authentication method
  ansible.builtin.uri:
    url: "http://{{ vault_addr }}:{{ vault_port }}/v1/auth/{{ item.name }}/config"
    method: POST
    headers:
      X-Vault-Token: "{{ vault_root_token | default('') }}"
    body_format: json
    body: "{{ item.config }}"
    status_code: [200, 204, 400]
  loop: "{{ vault_auth_methods }}"
  when:
    - vault_init_status.json.initialized | default(false)
    - vault_root_token is defined
    - item.type == "github"

- name: Configure username/password authentication method
  ansible.builtin.uri:
    url: "http://{{ vault_addr }}:{{ vault_port }}/v1/auth/{{ auth_method.name }}/users/{{ user.username }}"
    method: POST
    headers:
      X-Vault-Token: "{{ vault_root_token | default('') }}"
    body_format: json
    body:
      password: "{{ user.password }}"
      policies: "{{ user.policies | default([]) }}"
    status_code: [200, 204, 400]
  loop: "{{ query('subelements', vault_auth_methods | selectattr('type', 'equalto', 'userpass') | list, 'users', {'skip_missing': True}) }}"
  loop_control:
    loop_var: auth_method_user
  when:
    - vault_init_status.json.initialized | default(false)
    - vault_root_token is defined
  vars:
    auth_method: "{{ auth_method_user.0 }}"
    user: "{{ auth_method_user.1 }}"
