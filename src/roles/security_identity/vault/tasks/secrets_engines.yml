---
# Secrets engines configuration

- name: Wait for Vault to be ready
  ansible.builtin.uri:
    url: "http://{{ vault_addr }}:{{ vault_port }}/v1/sys/health"
    method: GET
    status_code: [200, 429, 501, 503]
  register: vault_health_check
  until: vault_health_check.status in [200, 429, 501, 503]
  retries: 30
  delay: 5

- name: Check if Vault is initialized
  ansible.builtin.uri:
    url: "http://{{ vault_addr }}:{{ vault_port }}/v1/sys/init"
    method: GET
    status_code: [200, 204, 404]
  register: vault_init_status

- name: Enable secrets engines
  ansible.builtin.uri:
    url: "http://{{ vault_addr }}:{{ vault_port }}/v1/sys/mounts/{{ item.path }}"
    method: POST
    headers:
      X-Vault-Token: "{{ vault_root_token | default('') }}"
    body_format: json
    body:
      type: "{{ item.type }}"
      config: "{{ item.config | default({}) }}"
      options: "{{ item.options | default({}) }}"
    status_code: [200, 204, 400]
  loop: "{{ vault_secrets_engines }}"
  when:
    - vault_init_status.json.initialized | default(false)
    - vault_root_token is defined

- name: Configure KV v2 secrets engine
  ansible.builtin.uri:
    url: "http://{{ vault_addr }}:{{ vault_port }}/v1/{{ item.path }}/config"
    method: POST
    headers:
      X-Vault-Token: "{{ vault_root_token | default('') }}"
    body_format: json
    body:
      max_versions: "{{ item.max_versions | default(10) }}"
      cas_required: "{{ item.cas_required | default(false) }}"
      delete_version_after: "{{ item.delete_version_after | default('0s') }}"
    status_code: [200, 204, 400]
  loop: "{{ vault_secrets_engines }}"
  when:
    - vault_init_status.json.initialized | default(false)
    - vault_root_token is defined
    - item.type == "kv-v2"

- name: Configure database secrets engine connections
  ansible.builtin.uri:
    url: "http://{{ vault_addr }}:{{ vault_port }}/v1/{{ secrets_engine.path }}/config/{{ db_connection.name }}"
    method: POST
    headers:
      X-Vault-Token: "{{ vault_root_token | default('') }}"
    body_format: json
    body:
      plugin_name: "{{ db_connection.plugin_name }}"
      connection_url: "{{ db_connection.connection_url }}"
      allowed_roles: "{{ db_connection.allowed_roles | default([]) }}"
      username: "{{ db_connection.username | default('') }}"
      password: "{{ db_connection.password | default('') }}"
    status_code: [200, 204, 400]
  loop: "{{ query('subelements', vault_secrets_engines | selectattr('type', 'equalto', 'database') | list, 'connections', {'skip_missing': True}) }}"
  loop_control:
    loop_var: secrets_engine_connection
  when:
    - vault_init_status.json.initialized | default(false)
    - vault_root_token is defined
  vars:
    secrets_engine: "{{ secrets_engine_connection.0 }}"
    db_connection: "{{ secrets_engine_connection.1 }}"

- name: Configure AWS secrets engine
  ansible.builtin.uri:
    url: "http://{{ vault_addr }}:{{ vault_port }}/v1/{{ item.path }}/config/root"
    method: POST
    headers:
      X-Vault-Token: "{{ vault_root_token | default('') }}"
    body_format: json
    body:
      access_key: "{{ item.access_key }}"
      secret_key: "{{ item.secret_key }}"
      region: "{{ item.region | default('us-east-1') }}"
    status_code: [200, 204, 400]
  loop: "{{ vault_secrets_engines }}"
  when:
    - vault_init_status.json.initialized | default(false)
    - vault_root_token is defined
    - item.type == "aws"
    - item.access_key is defined
    - item.secret_key is defined

- name: Configure SSH secrets engine
  ansible.builtin.uri:
    url: "http://{{ vault_addr }}:{{ vault_port }}/v1/{{ item.path }}/config/ca"
    method: POST
    headers:
      X-Vault-Token: "{{ vault_root_token | default('') }}"
    body_format: json
    body:
      generate_signing_key: "{{ item.generate_signing_key | default(true) }}"
    status_code: [200, 204, 400]
  loop: "{{ vault_secrets_engines }}"
  when:
    - vault_init_status.json.initialized | default(false)
    - vault_root_token is defined
    - item.type == "ssh"

- name: Configure Transit secrets engine
  ansible.builtin.uri:
    url: "http://{{ vault_addr }}:{{ vault_port }}/v1/{{ secrets_engine.path }}/keys/{{ transit_key.name }}"
    method: POST
    headers:
      X-Vault-Token: "{{ vault_root_token | default('') }}"
    body_format: json
    body:
      type: "{{ transit_key.type | default('aes256-gcm96') }}"
      convergent_encryption: "{{ transit_key.convergent_encryption | default(false) }}"
      derived: "{{ transit_key.derived | default(false) }}"
    status_code: [200, 204, 400]
  loop: "{{ query('subelements', vault_secrets_engines | selectattr('type', 'equalto', 'transit') | list, 'keys', {'skip_missing': True}) }}"
  loop_control:
    loop_var: transit_binding
  when:
    - vault_init_status.json.initialized | default(false)
    - vault_root_token is defined
  vars:
    secrets_engine: "{{ transit_binding.0 }}"
    transit_key: "{{ transit_binding.1 }}"
