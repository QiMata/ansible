---
# Secrets engines configuration

- name: Wait for Vault to be ready
  ansible.builtin.uri:
    url: "http://{{ vault_addr }}:{{ vault_port }}/v1/sys/health"
    method: GET
    status_code: [200, 429, 501, 503]
  register: vault_health_check
  until: vault_health_check.status in [200, 429, 501, 503]
  retries: 30
  delay: 5

- name: Check if Vault is initialized
  ansible.builtin.uri:
    url: "http://{{ vault_addr }}:{{ vault_port }}/v1/sys/init"
    method: GET
  register: vault_init_status
  ignore_errors: true

- name: Enable secrets engines
  ansible.builtin.uri:
    url: "http://{{ vault_addr }}:{{ vault_port }}/v1/sys/mounts/{{ item.path }}"
    method: POST
    headers:
      X-Vault-Token: "{{ vault_root_token | default('') }}"
    body_format: json
    body:
      type: "{{ item.type }}"
      config: "{{ item.config | default({}) }}"
      options: "{{ item.options | default({}) }}"
    status_code: [200, 204, 400]
  loop: "{{ vault_secrets_engines }}"
  when:
    - vault_init_status.json.initialized | default(false)
    - vault_root_token is defined
  ignore_errors: true

- name: Configure KV v2 secrets engine
  ansible.builtin.uri:
    url: "http://{{ vault_addr }}:{{ vault_port }}/v1/{{ item.path }}/config"
    method: POST
    headers:
      X-Vault-Token: "{{ vault_root_token | default('') }}"
    body_format: json
    body:
      max_versions: "{{ item.max_versions | default(10) }}"
      cas_required: "{{ item.cas_required | default(false) }}"
      delete_version_after: "{{ item.delete_version_after | default('0s') }}"
    status_code: [200, 204, 400]
  loop: "{{ vault_secrets_engines }}"
  when:
    - vault_init_status.json.initialized | default(false)
    - vault_root_token is defined
    - item.type == "kv-v2"
  ignore_errors: true

- name: Configure database secrets engine connections
  ansible.builtin.uri:
    url: "http://{{ vault_addr }}:{{ vault_port }}/v1/{{ item.path }}/config/{{ connection.name }}"
    method: POST
    headers:
      X-Vault-Token: "{{ vault_root_token | default('') }}"
    body_format: json
    body:
      plugin_name: "{{ connection.plugin_name }}"
      connection_url: "{{ connection.connection_url }}"
      allowed_roles: "{{ connection.allowed_roles | default([]) }}"
      username: "{{ connection.username | default('') }}"
      password: "{{ connection.password | default('') }}"
    status_code: [200, 204, 400]
  loop: "{{ vault_secrets_engines }}"
  loop_control:
    loop_var: secrets_engine
  when:
    - vault_init_status.json.initialized | default(false)
    - vault_root_token is defined
    - secrets_engine.type == "database"
    - secrets_engine.connections is defined
  vars:
    item: "{{ secrets_engine }}"
    connection: "{{ item.1 }}"
  with_subelements:
    - "{{ vault_secrets_engines | selectattr('type', 'equalto', 'database') | list }}"
    - connections
    - skip_missing: true
  ignore_errors: true

- name: Configure AWS secrets engine
  ansible.builtin.uri:
    url: "http://{{ vault_addr }}:{{ vault_port }}/v1/{{ item.path }}/config/root"
    method: POST
    headers:
      X-Vault-Token: "{{ vault_root_token | default('') }}"
    body_format: json
    body:
      access_key: "{{ item.access_key }}"
      secret_key: "{{ item.secret_key }}"
      region: "{{ item.region | default('us-east-1') }}"
    status_code: [200, 204, 400]
  loop: "{{ vault_secrets_engines }}"
  when:
    - vault_init_status.json.initialized | default(false)
    - vault_root_token is defined
    - item.type == "aws"
    - item.access_key is defined
    - item.secret_key is defined
  ignore_errors: true

- name: Configure SSH secrets engine
  ansible.builtin.uri:
    url: "http://{{ vault_addr }}:{{ vault_port }}/v1/{{ item.path }}/config/ca"
    method: POST
    headers:
      X-Vault-Token: "{{ vault_root_token | default('') }}"
    body_format: json
    body:
      generate_signing_key: "{{ item.generate_signing_key | default(true) }}"
    status_code: [200, 204, 400]
  loop: "{{ vault_secrets_engines }}"
  when:
    - vault_init_status.json.initialized | default(false)
    - vault_root_token is defined
    - item.type == "ssh"
  ignore_errors: true

- name: Configure Transit secrets engine
  ansible.builtin.uri:
    url: "http://{{ vault_addr }}:{{ vault_port }}/v1/{{ item.path }}/keys/{{ key.name }}"
    method: POST
    headers:
      X-Vault-Token: "{{ vault_root_token | default('') }}"
    body_format: json
    body:
      type: "{{ key.type | default('aes256-gcm96') }}"
      convergent_encryption: "{{ key.convergent_encryption | default(false) }}"
      derived: "{{ key.derived | default(false) }}"
    status_code: [200, 204, 400]
  loop: "{{ vault_secrets_engines }}"
  loop_control:
    loop_var: secrets_engine
  when:
    - vault_init_status.json.initialized | default(false)
    - vault_root_token is defined
    - secrets_engine.type == "transit"
    - secrets_engine.keys is defined
  vars:
    item: "{{ secrets_engine }}"
    key: "{{ item.1 }}"
  with_subelements:
    - "{{ vault_secrets_engines | selectattr('type', 'equalto', 'transit') | list }}"
    - keys
    - skip_missing: true
  ignore_errors: true
