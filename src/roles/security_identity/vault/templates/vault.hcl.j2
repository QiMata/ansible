# Vault Configuration
# Generated by Ansible

# ========================================
# STORAGE BACKEND
# ========================================
{% if vault_storage_backend == "file" %}
storage "file" {
  path = "{{ vault_file_storage_path }}"
}
{% elif vault_storage_backend == "raft" %}
storage "raft" {
  path    = "{{ vault_raft_path }}"
  node_id = "{{ vault_raft_node_id }}"
{% if vault_raft_retry_join %}
{% for peer in vault_raft_retry_join %}
  retry_join {
    leader_api_addr = "{{ peer }}"
  }
{% endfor %}
{% endif %}
}
{% elif vault_storage_backend == "consul" %}
storage "consul" {
  address      = "{{ vault_consul_address }}"
  path         = "{{ vault_consul_path }}"
  scheme       = "{{ vault_consul_scheme }}"
{% if vault_consul_token %}
  token        = "{{ vault_consul_token }}"
{% endif %}
  session_ttl  = "{{ vault_consul_session_ttl }}"
  lock_wait_time = "{{ vault_consul_lock_wait_time }}"
}
{% elif vault_storage_backend == "s3" %}
storage "s3" {
  bucket     = "{{ vault_s3_bucket }}"
  region     = "{{ vault_s3_region }}"
{% if vault_s3_access_key %}
  access_key = "{{ vault_s3_access_key }}"
  secret_key = "{{ vault_s3_secret_key }}"
{% endif %}
{% if vault_s3_endpoint %}
  endpoint   = "{{ vault_s3_endpoint }}"
{% endif %}
{% if vault_s3_force_path_style %}
  s3_force_path_style = {{ vault_s3_force_path_style | bool }}
{% endif %}
}
{% elif vault_storage_backend == "azure" %}
storage "azure" {
  accountName = "{{ vault_azure_account_name }}"
  accountKey  = "{{ vault_azure_account_key }}"
  container   = "{{ vault_azure_container }}"
}
{% elif vault_storage_backend == "gcp" %}
storage "gcs" {
  bucket      = "{{ vault_gcp_bucket }}"
{% if vault_gcp_credentials_file %}
  credentials_file = "{{ vault_gcp_credentials_file }}"
{% endif %}
}
{% elif vault_storage_backend in ["mysql", "postgresql"] %}
storage "{{ vault_storage_backend }}" {
  connection_url    = "{{ vault_db_connection_url }}"
  table             = "{{ vault_db_table }}"
  max_parallel      = "{{ vault_db_max_parallel }}"
}
{% endif %}

# ========================================
# LISTENER
# ========================================
listener "tcp" {
  address       = "{{ vault_addr }}:{{ vault_port }}"
{% if vault_tls_cert_src and vault_tls_key_src %}
  tls_cert_file = "{{ vault_tls_dir }}/vault.crt"
  tls_key_file  = "{{ vault_tls_dir }}/vault.key"
{% else %}
  tls_disable   = "true"
{% endif %}
}

# ========================================
# AUTO-UNSEALING
# ========================================
{% if vault_auto_unseal and vault_auto_unseal_provider == "aws-kms" %}
seal "awskms" {
  region     = "{{ vault_aws_kms_region }}"
  kms_key_id = "{{ vault_aws_kms_key_id }}"
{% if vault_aws_access_key %}
  access_key = "{{ vault_aws_access_key }}"
  secret_key = "{{ vault_aws_secret_key }}"
{% endif %}
}
{% elif vault_auto_unseal and vault_auto_unseal_provider == "azure-keyvault" %}
seal "azurekeyvault" {
  vault_name   = "{{ vault_azure_keyvault_name }}"
  key_name     = "{{ vault_azure_key_name }}"
  tenant_id    = "{{ vault_azure_tenant_id }}"
  client_id    = "{{ vault_azure_client_id }}"
  client_secret = "{{ vault_azure_client_secret }}"
}
{% elif vault_auto_unseal and vault_auto_unseal_provider == "gcp-kms" %}
seal "gcpckms" {
  project      = "{{ vault_gcp_kms_project }}"
  region       = "{{ vault_gcp_kms_region }}"
  key_ring     = "{{ vault_gcp_kms_key_ring }}"
  crypto_key   = "{{ vault_gcp_kms_crypto_key }}"
{% if vault_gcp_credentials %}
  credentials  = "{{ vault_gcp_credentials }}"
{% endif %}
}
{% elif vault_auto_unseal and vault_auto_unseal_provider == "transit" %}
seal "transit" {
  address         = "{{ vault_transit_address }}"
  token           = "{{ vault_transit_token }}"
  key_name        = "{{ vault_transit_key_name }}"
  mount_path      = "{{ vault_transit_mount_path }}"
}
{% endif %}

# ========================================
# GENERAL CONFIGURATION
# ========================================
ui = {{ vault_ui | bool }}

{% if vault_api_addr %}
api_addr = "{{ vault_api_addr }}"
{% endif %}

{% if vault_enable_ha and vault_ha_cluster_addr %}
cluster_addr = "{{ vault_ha_cluster_addr }}"
{% endif %}

{% if vault_ha_redirect_addr %}
redirect_addr = "{{ vault_ha_redirect_addr }}"
{% endif %}

disable_mlock = {{ vault_disable_mlock | bool }}

{% if not vault_enable_raw_endpoint %}
raw_storage_endpoint = false
{% endif %}

default_lease_ttl = "{{ vault_default_lease_ttl }}"
max_lease_ttl = "{{ vault_max_lease_ttl }}"

# ========================================
# TELEMETRY
# ========================================
{% if vault_enable_telemetry %}
telemetry {
{% if vault_telemetry_prometheus_retention %}
  prometheus_retention_time = "{{ vault_telemetry_prometheus_retention }}"
  disable_hostname = true
{% endif %}
{% if vault_telemetry_statsd_address %}
  statsd_address = "{{ vault_telemetry_statsd_address }}"
{% endif %}
{% if vault_telemetry_statsite_address %}
  statsite_address = "{{ vault_telemetry_statsite_address }}"
{% endif %}
{% if vault_telemetry_dogstatsd_addr %}
  dogstatsd_addr = "{{ vault_telemetry_dogstatsd_addr }}"
{% endif %}
{% if vault_telemetry_circonus_api_token %}
  circonus_api_token = "{{ vault_telemetry_circonus_api_token }}"
{% endif %}
}
{% endif %}

# ========================================
# LOGGING
# ========================================
{% if vault_log_level != "INFO" %}
log_level = "{{ vault_log_level }}"
{% endif %}

{% if vault_log_format == "json" %}
log_format = "json"
{% endif %}

{% if vault_log_file %}
log_file = "{{ vault_log_file }}"
{% endif %}

{% if vault_log_rotate_duration != "24h" %}
log_rotate_duration = "{{ vault_log_rotate_duration }}"
{% endif %}

{% if vault_log_rotate_max_files > 0 %}
log_rotate_max_files = {{ vault_log_rotate_max_files }}
{% endif %}

# ========================================
# ENTROPY AUGMENTATION
# ========================================
{% if vault_entropy_augmentation %}
entropy "seal" {
  mode = "augmentation"
}
{% endif %}

# ========================================
# CUSTOM CONFIGURATION
# ========================================
{% if vault_custom_config %}
{{ vault_custom_config }}
{% endif %}
