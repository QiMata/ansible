---
# Comprehensive Jenkins deployment playbook
# This playbook deploys a complete Jenkins infrastructure with all available roles

- name: Deploy Jenkins Controllers
  hosts: jenkins_controllers
  become: true
  vars:
    # Jenkins basic configuration
    jenkins_version: "2.426.3"
    jenkins_http_port: 8080
    jenkins_admin_user: admin
    jenkins_admin_password: "{{ vault_jenkins_admin_password }}"
    jenkins_admin_email: "jenkins-admin@{{ ansible_domain | default('localhost') }}"
    
    # SSL Configuration
    jenkins_ssl_enabled: true
    jenkins_ssl_port: 8443
    jenkins_ssl_disable_http: false  # Allow both HTTP and HTTPS initially
    
    # Configuration as Code
    jenkins_casc_enabled: true
    jenkins_casc_config:
      jenkins:
        systemMessage: "Jenkins {{ inventory_hostname }} - Managed by Ansible"
        numExecutors: 2
        mode: NORMAL
        labelString: "controller master {{ ansible_hostname }}"
        quietPeriod: 5
        scmCheckoutRetryCount: 0
      security:
        globalJobDslSecurityConfiguration:
          useScriptSecurity: true
      unclassified:
        location:
          url: "https://{{ ansible_fqdn }}:{{ jenkins_ssl_port }}/"
          adminAddress: "{{ jenkins_admin_email }}"
    
    # Monitoring configuration
    jenkins_monitoring_enabled: true
    jenkins_monitoring_healthcheck_interval: "*/5 * * * *"
    jenkins_monitoring_alert_email: "{{ jenkins_admin_email }}"
    
    # Credentials to create
    jenkins_credentials_list:
      - id: "github-deploy-key"
        type: "ssh_private_key"
        description: "GitHub deployment key"
        username: "git"
        private_key: "{{ vault_github_deploy_key }}"
        scope: "GLOBAL"
      
      - id: "docker-registry-creds"
        type: "username_password"
        description: "Docker registry credentials"
        username: "{{ vault_docker_username }}"
        password: "{{ vault_docker_password }}"
        scope: "GLOBAL"
    
    # Plugin list
    jenkins_plugins:
      - "git"
      - "workflow-aggregator"  # Pipeline plugin
      - "blueocean"
      - "configuration-as-code"
      - "credentials"
      - "ssh-slaves"
      - "matrix-auth"
      - "ldap"
      - "docker-workflow"
      - "prometheus"
    
  pre_tasks:
    - name: Update apt cache
      ansible.builtin.apt:
        update_cache: true
        cache_valid_time: 3600
      
    - name: Install common dependencies
      ansible.builtin.apt:
        name:
          - curl
          - wget
          - gnupg
          - software-properties-common
          - apt-transport-https
          - ca-certificates
        state: present

  roles:
    - role: jenkins_controller
      tags: ['jenkins', 'controller']
    
    - role: jenkins_ssl
      tags: ['jenkins', 'ssl']
      when: jenkins_ssl_enabled | default(false)
    
    - role: jenkins_casc
      tags: ['jenkins', 'casc']
      when: jenkins_casc_enabled | default(false)
    
    - role: jenkins_credentials
      tags: ['jenkins', 'credentials']
      when: jenkins_credentials_list | default([]) | length > 0
    
    - role: jenkins_monitoring
      tags: ['jenkins', 'monitoring']
      when: jenkins_monitoring_enabled | default(false)
    
    - role: jenkins_backup
      tags: ['jenkins', 'backup']

  post_tasks:
    - name: Display Jenkins access information
      ansible.builtin.debug:
        msg: |
          Jenkins deployment completed successfully!
          
          Access URLs:
          {% if jenkins_ssl_enabled %}
          - HTTPS: https://{{ ansible_fqdn }}:{{ jenkins_ssl_port }}/
          {% endif %}
          {% if not jenkins_ssl_disable_http %}
          - HTTP: http://{{ ansible_fqdn }}:{{ jenkins_http_port }}/
          {% endif %}
          
          Default admin credentials:
          - Username: {{ jenkins_admin_user }}
          - Password: {{ jenkins_admin_password }}
          
          Monitoring:
          - Health checks: Every 5 minutes
          - Logs: /var/log/jenkins-monitoring/
          - Backup directory: {{ jenkins_backup_dir | default('/var/backups/jenkins') }}

- name: Deploy Jenkins Agents
  hosts: jenkins_agents
  become: true
  vars:
    jenkins_agent_user: jenkins
    jenkins_agent_home: "/home/{{ jenkins_agent_user }}"
    jenkins_agent_executors: 2
    jenkins_agent_labels: "linux {{ ansible_architecture }} {{ ansible_distribution | lower }}"
    
    # Agent registration
    jenkins_agent_registration_enabled: true
    jenkins_controller_host: "{{ groups['jenkins_controllers'][0] }}"
    
  pre_tasks:
    - name: Update apt cache
      ansible.builtin.apt:
        update_cache: true
        cache_valid_time: 3600

  roles:
    - role: jenkins_agent
      tags: ['jenkins', 'agent']
    
    - role: jenkins_agent_registration
      tags: ['jenkins', 'agent', 'registration']
      when: jenkins_agent_registration_enabled | default(false)

  post_tasks:
    - name: Display agent deployment information
      ansible.builtin.debug:
        msg: |
          Jenkins agent deployment completed!
          
          Agent configuration:
          - Name: {{ inventory_hostname }}
          - Executors: {{ jenkins_agent_executors }}
          - Labels: {{ jenkins_agent_labels }}
          - Home directory: {{ jenkins_agent_home }}
          - Controller: {{ jenkins_controller_host }}

- name: Verify Jenkins Deployment
  hosts: jenkins_controllers
  become: false
  tags: ['verify']
  tasks:
    - name: Check Jenkins API availability
      ansible.builtin.uri:
        url: "http://{{ ansible_default_ipv4.address }}:{{ jenkins_http_port | default(8080) }}/api/json"
        method: GET
        user: "{{ jenkins_admin_user }}"
        password: "{{ jenkins_admin_password }}"
        return_content: true
      register: jenkins_api_check
      retries: 5
      delay: 10
    
    - name: Check SSL endpoint (if enabled)
      ansible.builtin.uri:
        url: "https://{{ ansible_default_ipv4.address }}:{{ jenkins_ssl_port | default(8443) }}/api/json"
        method: GET
        user: "{{ jenkins_admin_user }}"
        password: "{{ jenkins_admin_password }}"
        validate_certs: false
        return_content: true
      register: jenkins_ssl_check
      when: jenkins_ssl_enabled | default(false)
      retries: 3
      delay: 5
    
    - name: Check registered agents
      ansible.builtin.uri:
        url: "http://{{ ansible_default_ipv4.address }}:{{ jenkins_http_port | default(8080) }}/computer/api/json"
        method: GET
        user: "{{ jenkins_admin_user }}"
        password: "{{ jenkins_admin_password }}"
        return_content: true
      register: jenkins_agents_check
    
    - name: Display verification results
      ansible.builtin.debug:
        msg: |
          Jenkins Deployment Verification:
          
          ✓ Jenkins API: Available ({{ jenkins_api_check.json.mode }})
          ✓ Executors: {{ jenkins_api_check.json.numExecutors }}
          {% if jenkins_ssl_enabled and jenkins_ssl_check is succeeded %}
          ✓ SSL Endpoint: Available
          {% endif %}
          ✓ Registered Agents: {{ jenkins_agents_check.json.computer | length - 1 }}
          
          Agents:
          {% for computer in jenkins_agents_check.json.computer %}
          {% if computer.displayName != "master" %}
          - {{ computer.displayName }}: {{ 'Online' if not computer.offline else 'Offline' }}
          {% endif %}
          {% endfor %}
