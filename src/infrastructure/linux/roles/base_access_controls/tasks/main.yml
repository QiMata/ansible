---
- name: Ensure administrative group exists
  ansible.builtin.group:
    name: "{{ base_access_controls_admin_group }}"
    state: present

- name: Ensure sudo group exists
  ansible.builtin.group:
    name: "{{ base_access_controls_sudo_group }}"
    state: present

- name: Manage administrative accounts
  ansible.builtin.user:
    name: "{{ item.name }}"
    state: "{{ item.state | default('present') }}"
    shell: "{{ item.shell | default(base_access_controls_default_shell) }}"
    group: "{{ item.primary_group | default(base_access_controls_admin_group | default('admin')) }}"
    groups: >-
      {{ (
          (item.groups | default([]))
          + [
            base_access_controls_admin_group | default('admin'),
            base_access_controls_sudo_group | default('sudo')
          ]
        ) | unique | join(',') }}
    append: "{{ item.append | default(true) }}"
    create_home: "{{ item.create_home | default(true) }}"
    password: "{{ item.password | default(omit) }}"
    update_password: "{{ item.update_password | default('on_create') }}"
    expires: "{{ item.expires | default(omit) }}"
    comment: "{{ item.comment | default(omit) }}"
    uid: "{{ item.uid | default(omit) }}"
  loop: "{{ base_access_controls_accounts }}"
  when:
    - base_access_controls_accounts | length > 0
    - (item.state | default('present')) != 'absent'

- name: Remove retired administrative accounts
  ansible.builtin.user:
    name: "{{ item.name }}"
    state: absent
    remove: "{{ item.remove | default(false) }}"
  loop: "{{ base_access_controls_accounts }}"
  when:
    - base_access_controls_accounts | length > 0
    - (item.state | default('present')) == 'absent'

- name: Configure administrative authorized keys
  ansible.posix.authorized_key:
    user: "{{ item.0.name }}"
    key: "{{ item.1 }}"
    state: present
    manage_dir: true
  loop: "{{ base_access_controls_accounts | subelements('ssh_authorized_keys', skip_missing=True) }}"
  when:
    - base_access_controls_manage_authorized_keys | bool
    - (item.0.state | default('present')) != 'absent'

- name: Install sudo hardening drop-in
  ansible.builtin.template:
    src: sudoers-base-admins.j2
    dest: /etc/sudoers.d/99-base-admins
    owner: root
    group: root
    mode: "0440"
    validate: "visudo -cf %s"
